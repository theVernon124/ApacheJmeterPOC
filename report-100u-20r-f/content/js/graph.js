/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 28800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 28800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 57.0, "minX": 0.0, "maxY": 78700.0, "series": [{"data": [[0.0, 57.0], [0.1, 2484.0], [0.2, 4132.0], [0.3, 6190.0], [0.4, 8008.0], [0.5, 8702.0], [0.6, 9259.0], [0.7, 9615.0], [0.8, 9979.0], [0.9, 10138.0], [1.0, 10307.0], [1.1, 10470.0], [1.2, 10609.0], [1.3, 10750.0], [1.4, 10843.0], [1.5, 10948.0], [1.6, 11052.0], [1.7, 11132.0], [1.8, 11186.0], [1.9, 11243.0], [2.0, 11307.0], [2.1, 11394.0], [2.2, 11463.0], [2.3, 11531.0], [2.4, 11582.0], [2.5, 11643.0], [2.6, 11694.0], [2.7, 11728.0], [2.8, 11772.0], [2.9, 11818.0], [3.0, 11861.0], [3.1, 11904.0], [3.2, 11948.0], [3.3, 11984.0], [3.4, 12020.0], [3.5, 12050.0], [3.6, 12096.0], [3.7, 12132.0], [3.8, 12176.0], [3.9, 12207.0], [4.0, 12237.0], [4.1, 12263.0], [4.2, 12293.0], [4.3, 12328.0], [4.4, 12364.0], [4.5, 12394.0], [4.6, 12422.0], [4.7, 12447.0], [4.8, 12469.0], [4.9, 12496.0], [5.0, 12522.0], [5.1, 12551.0], [5.2, 12572.0], [5.3, 12592.0], [5.4, 12616.0], [5.5, 12640.0], [5.6, 12668.0], [5.7, 12692.0], [5.8, 12709.0], [5.9, 12732.0], [6.0, 12757.0], [6.1, 12781.0], [6.2, 12807.0], [6.3, 12829.0], [6.4, 12851.0], [6.5, 12872.0], [6.6, 12889.0], [6.7, 12909.0], [6.8, 12928.0], [6.9, 12948.0], [7.0, 12972.0], [7.1, 12989.0], [7.2, 13010.0], [7.3, 13027.0], [7.4, 13051.0], [7.5, 13077.0], [7.6, 13095.0], [7.7, 13120.0], [7.8, 13143.0], [7.9, 13158.0], [8.0, 13174.0], [8.1, 13190.0], [8.2, 13208.0], [8.3, 13224.0], [8.4, 13243.0], [8.5, 13259.0], [8.6, 13275.0], [8.7, 13291.0], [8.8, 13309.0], [8.9, 13325.0], [9.0, 13339.0], [9.1, 13352.0], [9.2, 13370.0], [9.3, 13383.0], [9.4, 13399.0], [9.5, 13413.0], [9.6, 13427.0], [9.7, 13444.0], [9.8, 13460.0], [9.9, 13472.0], [10.0, 13485.0], [10.1, 13503.0], [10.2, 13518.0], [10.3, 13533.0], [10.4, 13550.0], [10.5, 13569.0], [10.6, 13580.0], [10.7, 13596.0], [10.8, 13610.0], [10.9, 13621.0], [11.0, 13632.0], [11.1, 13644.0], [11.2, 13661.0], [11.3, 13675.0], [11.4, 13691.0], [11.5, 13702.0], [11.6, 13715.0], [11.7, 13727.0], [11.8, 13741.0], [11.9, 13753.0], [12.0, 13762.0], [12.1, 13773.0], [12.2, 13784.0], [12.3, 13795.0], [12.4, 13806.0], [12.5, 13821.0], [12.6, 13829.0], [12.7, 13844.0], [12.8, 13858.0], [12.9, 13873.0], [13.0, 13885.0], [13.1, 13897.0], [13.2, 13909.0], [13.3, 13919.0], [13.4, 13932.0], [13.5, 13943.0], [13.6, 13955.0], [13.7, 13967.0], [13.8, 13980.0], [13.9, 13991.0], [14.0, 14002.0], [14.1, 14014.0], [14.2, 14024.0], [14.3, 14036.0], [14.4, 14045.0], [14.5, 14055.0], [14.6, 14063.0], [14.7, 14072.0], [14.8, 14080.0], [14.9, 14092.0], [15.0, 14103.0], [15.1, 14115.0], [15.2, 14125.0], [15.3, 14135.0], [15.4, 14144.0], [15.5, 14153.0], [15.6, 14165.0], [15.7, 14177.0], [15.8, 14187.0], [15.9, 14197.0], [16.0, 14207.0], [16.1, 14218.0], [16.2, 14228.0], [16.3, 14239.0], [16.4, 14249.0], [16.5, 14260.0], [16.6, 14269.0], [16.7, 14279.0], [16.8, 14289.0], [16.9, 14299.0], [17.0, 14306.0], [17.1, 14318.0], [17.2, 14324.0], [17.3, 14334.0], [17.4, 14343.0], [17.5, 14355.0], [17.6, 14363.0], [17.7, 14372.0], [17.8, 14379.0], [17.9, 14387.0], [18.0, 14397.0], [18.1, 14406.0], [18.2, 14415.0], [18.3, 14422.0], [18.4, 14432.0], [18.5, 14442.0], [18.6, 14450.0], [18.7, 14461.0], [18.8, 14470.0], [18.9, 14479.0], [19.0, 14490.0], [19.1, 14498.0], [19.2, 14506.0], [19.3, 14513.0], [19.4, 14521.0], [19.5, 14531.0], [19.6, 14538.0], [19.7, 14546.0], [19.8, 14556.0], [19.9, 14564.0], [20.0, 14574.0], [20.1, 14582.0], [20.2, 14591.0], [20.3, 14599.0], [20.4, 14607.0], [20.5, 14615.0], [20.6, 14624.0], [20.7, 14634.0], [20.8, 14642.0], [20.9, 14650.0], [21.0, 14656.0], [21.1, 14664.0], [21.2, 14672.0], [21.3, 14681.0], [21.4, 14690.0], [21.5, 14697.0], [21.6, 14705.0], [21.7, 14714.0], [21.8, 14724.0], [21.9, 14730.0], [22.0, 14740.0], [22.1, 14747.0], [22.2, 14755.0], [22.3, 14762.0], [22.4, 14769.0], [22.5, 14779.0], [22.6, 14787.0], [22.7, 14793.0], [22.8, 14802.0], [22.9, 14809.0], [23.0, 14818.0], [23.1, 14825.0], [23.2, 14831.0], [23.3, 14838.0], [23.4, 14846.0], [23.5, 14854.0], [23.6, 14862.0], [23.7, 14871.0], [23.8, 14880.0], [23.9, 14888.0], [24.0, 14895.0], [24.1, 14902.0], [24.2, 14910.0], [24.3, 14917.0], [24.4, 14926.0], [24.5, 14935.0], [24.6, 14942.0], [24.7, 14949.0], [24.8, 14957.0], [24.9, 14965.0], [25.0, 14974.0], [25.1, 14983.0], [25.2, 14990.0], [25.3, 14997.0], [25.4, 15004.0], [25.5, 15011.0], [25.6, 15018.0], [25.7, 15025.0], [25.8, 15031.0], [25.9, 15040.0], [26.0, 15047.0], [26.1, 15054.0], [26.2, 15060.0], [26.3, 15067.0], [26.4, 15075.0], [26.5, 15082.0], [26.6, 15090.0], [26.7, 15096.0], [26.8, 15103.0], [26.9, 15110.0], [27.0, 15116.0], [27.1, 15123.0], [27.2, 15130.0], [27.3, 15139.0], [27.4, 15146.0], [27.5, 15154.0], [27.6, 15161.0], [27.7, 15169.0], [27.8, 15178.0], [27.9, 15187.0], [28.0, 15194.0], [28.1, 15202.0], [28.2, 15209.0], [28.3, 15215.0], [28.4, 15222.0], [28.5, 15227.0], [28.6, 15233.0], [28.7, 15240.0], [28.8, 15246.0], [28.9, 15252.0], [29.0, 15258.0], [29.1, 15264.0], [29.2, 15269.0], [29.3, 15278.0], [29.4, 15285.0], [29.5, 15292.0], [29.6, 15297.0], [29.7, 15302.0], [29.8, 15309.0], [29.9, 15315.0], [30.0, 15323.0], [30.1, 15329.0], [30.2, 15337.0], [30.3, 15343.0], [30.4, 15351.0], [30.5, 15360.0], [30.6, 15367.0], [30.7, 15375.0], [30.8, 15382.0], [30.9, 15388.0], [31.0, 15395.0], [31.1, 15403.0], [31.2, 15410.0], [31.3, 15416.0], [31.4, 15423.0], [31.5, 15430.0], [31.6, 15435.0], [31.7, 15441.0], [31.8, 15447.0], [31.9, 15454.0], [32.0, 15461.0], [32.1, 15466.0], [32.2, 15472.0], [32.3, 15478.0], [32.4, 15485.0], [32.5, 15492.0], [32.6, 15501.0], [32.7, 15507.0], [32.8, 15514.0], [32.9, 15520.0], [33.0, 15526.0], [33.1, 15532.0], [33.2, 15539.0], [33.3, 15545.0], [33.4, 15553.0], [33.5, 15560.0], [33.6, 15565.0], [33.7, 15572.0], [33.8, 15579.0], [33.9, 15583.0], [34.0, 15590.0], [34.1, 15597.0], [34.2, 15602.0], [34.3, 15608.0], [34.4, 15614.0], [34.5, 15620.0], [34.6, 15626.0], [34.7, 15632.0], [34.8, 15638.0], [34.9, 15644.0], [35.0, 15649.0], [35.1, 15654.0], [35.2, 15661.0], [35.3, 15668.0], [35.4, 15675.0], [35.5, 15683.0], [35.6, 15688.0], [35.7, 15696.0], [35.8, 15703.0], [35.9, 15710.0], [36.0, 15718.0], [36.1, 15724.0], [36.2, 15730.0], [36.3, 15736.0], [36.4, 15743.0], [36.5, 15748.0], [36.6, 15754.0], [36.7, 15760.0], [36.8, 15766.0], [36.9, 15773.0], [37.0, 15778.0], [37.1, 15785.0], [37.2, 15791.0], [37.3, 15797.0], [37.4, 15805.0], [37.5, 15811.0], [37.6, 15816.0], [37.7, 15822.0], [37.8, 15828.0], [37.9, 15836.0], [38.0, 15841.0], [38.1, 15847.0], [38.2, 15854.0], [38.3, 15860.0], [38.4, 15866.0], [38.5, 15871.0], [38.6, 15879.0], [38.7, 15885.0], [38.8, 15891.0], [38.9, 15897.0], [39.0, 15902.0], [39.1, 15907.0], [39.2, 15914.0], [39.3, 15920.0], [39.4, 15925.0], [39.5, 15932.0], [39.6, 15938.0], [39.7, 15943.0], [39.8, 15949.0], [39.9, 15956.0], [40.0, 15961.0], [40.1, 15968.0], [40.2, 15973.0], [40.3, 15979.0], [40.4, 15984.0], [40.5, 15991.0], [40.6, 15998.0], [40.7, 16004.0], [40.8, 16008.0], [40.9, 16014.0], [41.0, 16018.0], [41.1, 16024.0], [41.2, 16029.0], [41.3, 16036.0], [41.4, 16041.0], [41.5, 16048.0], [41.6, 16054.0], [41.7, 16060.0], [41.8, 16067.0], [41.9, 16074.0], [42.0, 16080.0], [42.1, 16086.0], [42.2, 16093.0], [42.3, 16097.0], [42.4, 16103.0], [42.5, 16109.0], [42.6, 16116.0], [42.7, 16120.0], [42.8, 16128.0], [42.9, 16133.0], [43.0, 16138.0], [43.1, 16144.0], [43.2, 16149.0], [43.3, 16157.0], [43.4, 16162.0], [43.5, 16168.0], [43.6, 16174.0], [43.7, 16180.0], [43.8, 16186.0], [43.9, 16192.0], [44.0, 16198.0], [44.1, 16204.0], [44.2, 16210.0], [44.3, 16216.0], [44.4, 16221.0], [44.5, 16226.0], [44.6, 16231.0], [44.7, 16236.0], [44.8, 16242.0], [44.9, 16249.0], [45.0, 16255.0], [45.1, 16261.0], [45.2, 16267.0], [45.3, 16272.0], [45.4, 16279.0], [45.5, 16285.0], [45.6, 16291.0], [45.7, 16295.0], [45.8, 16303.0], [45.9, 16309.0], [46.0, 16313.0], [46.1, 16318.0], [46.2, 16324.0], [46.3, 16330.0], [46.4, 16337.0], [46.5, 16343.0], [46.6, 16349.0], [46.7, 16355.0], [46.8, 16360.0], [46.9, 16366.0], [47.0, 16371.0], [47.1, 16376.0], [47.2, 16382.0], [47.3, 16386.0], [47.4, 16392.0], [47.5, 16398.0], [47.6, 16404.0], [47.7, 16409.0], [47.8, 16415.0], [47.9, 16421.0], [48.0, 16426.0], [48.1, 16432.0], [48.2, 16438.0], [48.3, 16445.0], [48.4, 16453.0], [48.5, 16458.0], [48.6, 16464.0], [48.7, 16471.0], [48.8, 16476.0], [48.9, 16482.0], [49.0, 16487.0], [49.1, 16491.0], [49.2, 16497.0], [49.3, 16503.0], [49.4, 16508.0], [49.5, 16513.0], [49.6, 16518.0], [49.7, 16526.0], [49.8, 16530.0], [49.9, 16536.0], [50.0, 16542.0], [50.1, 16547.0], [50.2, 16552.0], [50.3, 16558.0], [50.4, 16564.0], [50.5, 16571.0], [50.6, 16578.0], [50.7, 16584.0], [50.8, 16590.0], [50.9, 16596.0], [51.0, 16601.0], [51.1, 16606.0], [51.2, 16613.0], [51.3, 16618.0], [51.4, 16625.0], [51.5, 16630.0], [51.6, 16635.0], [51.7, 16641.0], [51.8, 16647.0], [51.9, 16654.0], [52.0, 16658.0], [52.1, 16664.0], [52.2, 16670.0], [52.3, 16676.0], [52.4, 16682.0], [52.5, 16689.0], [52.6, 16695.0], [52.7, 16700.0], [52.8, 16706.0], [52.9, 16713.0], [53.0, 16718.0], [53.1, 16722.0], [53.2, 16727.0], [53.3, 16734.0], [53.4, 16739.0], [53.5, 16745.0], [53.6, 16751.0], [53.7, 16757.0], [53.8, 16762.0], [53.9, 16767.0], [54.0, 16774.0], [54.1, 16779.0], [54.2, 16786.0], [54.3, 16792.0], [54.4, 16797.0], [54.5, 16803.0], [54.6, 16808.0], [54.7, 16815.0], [54.8, 16821.0], [54.9, 16827.0], [55.0, 16834.0], [55.1, 16841.0], [55.2, 16848.0], [55.3, 16854.0], [55.4, 16859.0], [55.5, 16865.0], [55.6, 16871.0], [55.7, 16878.0], [55.8, 16885.0], [55.9, 16892.0], [56.0, 16898.0], [56.1, 16904.0], [56.2, 16911.0], [56.3, 16917.0], [56.4, 16923.0], [56.5, 16929.0], [56.6, 16935.0], [56.7, 16942.0], [56.8, 16947.0], [56.9, 16953.0], [57.0, 16960.0], [57.1, 16965.0], [57.2, 16973.0], [57.3, 16978.0], [57.4, 16987.0], [57.5, 16992.0], [57.6, 16998.0], [57.7, 17003.0], [57.8, 17008.0], [57.9, 17015.0], [58.0, 17021.0], [58.1, 17027.0], [58.2, 17034.0], [58.3, 17040.0], [58.4, 17046.0], [58.5, 17051.0], [58.6, 17058.0], [58.7, 17064.0], [58.8, 17069.0], [58.9, 17075.0], [59.0, 17082.0], [59.1, 17087.0], [59.2, 17093.0], [59.3, 17100.0], [59.4, 17105.0], [59.5, 17111.0], [59.6, 17116.0], [59.7, 17124.0], [59.8, 17130.0], [59.9, 17134.0], [60.0, 17139.0], [60.1, 17144.0], [60.2, 17149.0], [60.3, 17155.0], [60.4, 17161.0], [60.5, 17167.0], [60.6, 17173.0], [60.7, 17179.0], [60.8, 17185.0], [60.9, 17193.0], [61.0, 17200.0], [61.1, 17206.0], [61.2, 17213.0], [61.3, 17218.0], [61.4, 17224.0], [61.5, 17229.0], [61.6, 17235.0], [61.7, 17242.0], [61.8, 17247.0], [61.9, 17253.0], [62.0, 17258.0], [62.1, 17264.0], [62.2, 17271.0], [62.3, 17278.0], [62.4, 17283.0], [62.5, 17289.0], [62.6, 17295.0], [62.7, 17302.0], [62.8, 17308.0], [62.9, 17315.0], [63.0, 17321.0], [63.1, 17327.0], [63.2, 17332.0], [63.3, 17338.0], [63.4, 17344.0], [63.5, 17350.0], [63.6, 17358.0], [63.7, 17364.0], [63.8, 17369.0], [63.9, 17376.0], [64.0, 17383.0], [64.1, 17390.0], [64.2, 17398.0], [64.3, 17405.0], [64.4, 17412.0], [64.5, 17418.0], [64.6, 17425.0], [64.7, 17431.0], [64.8, 17437.0], [64.9, 17443.0], [65.0, 17450.0], [65.1, 17457.0], [65.2, 17462.0], [65.3, 17468.0], [65.4, 17473.0], [65.5, 17477.0], [65.6, 17485.0], [65.7, 17493.0], [65.8, 17500.0], [65.9, 17506.0], [66.0, 17514.0], [66.1, 17519.0], [66.2, 17527.0], [66.3, 17533.0], [66.4, 17541.0], [66.5, 17549.0], [66.6, 17556.0], [66.7, 17562.0], [66.8, 17569.0], [66.9, 17575.0], [67.0, 17583.0], [67.1, 17588.0], [67.2, 17594.0], [67.3, 17602.0], [67.4, 17610.0], [67.5, 17616.0], [67.6, 17621.0], [67.7, 17628.0], [67.8, 17633.0], [67.9, 17638.0], [68.0, 17645.0], [68.1, 17653.0], [68.2, 17660.0], [68.3, 17666.0], [68.4, 17672.0], [68.5, 17678.0], [68.6, 17684.0], [68.7, 17691.0], [68.8, 17697.0], [68.9, 17705.0], [69.0, 17713.0], [69.1, 17718.0], [69.2, 17724.0], [69.3, 17730.0], [69.4, 17737.0], [69.5, 17744.0], [69.6, 17750.0], [69.7, 17755.0], [69.8, 17762.0], [69.9, 17769.0], [70.0, 17777.0], [70.1, 17783.0], [70.2, 17791.0], [70.3, 17798.0], [70.4, 17805.0], [70.5, 17811.0], [70.6, 17817.0], [70.7, 17824.0], [70.8, 17831.0], [70.9, 17836.0], [71.0, 17844.0], [71.1, 17851.0], [71.2, 17858.0], [71.3, 17866.0], [71.4, 17873.0], [71.5, 17880.0], [71.6, 17889.0], [71.7, 17895.0], [71.8, 17902.0], [71.9, 17908.0], [72.0, 17916.0], [72.1, 17923.0], [72.2, 17929.0], [72.3, 17938.0], [72.4, 17944.0], [72.5, 17950.0], [72.6, 17957.0], [72.7, 17964.0], [72.8, 17973.0], [72.9, 17979.0], [73.0, 17987.0], [73.1, 17992.0], [73.2, 18000.0], [73.3, 18008.0], [73.4, 18016.0], [73.5, 18024.0], [73.6, 18031.0], [73.7, 18039.0], [73.8, 18046.0], [73.9, 18055.0], [74.0, 18064.0], [74.1, 18070.0], [74.2, 18079.0], [74.3, 18087.0], [74.4, 18093.0], [74.5, 18101.0], [74.6, 18109.0], [74.7, 18118.0], [74.8, 18124.0], [74.9, 18133.0], [75.0, 18138.0], [75.1, 18144.0], [75.2, 18150.0], [75.3, 18158.0], [75.4, 18165.0], [75.5, 18174.0], [75.6, 18182.0], [75.7, 18191.0], [75.8, 18199.0], [75.9, 18207.0], [76.0, 18215.0], [76.1, 18224.0], [76.2, 18234.0], [76.3, 18241.0], [76.4, 18248.0], [76.5, 18256.0], [76.6, 18262.0], [76.7, 18272.0], [76.8, 18280.0], [76.9, 18289.0], [77.0, 18295.0], [77.1, 18304.0], [77.2, 18313.0], [77.3, 18321.0], [77.4, 18329.0], [77.5, 18336.0], [77.6, 18348.0], [77.7, 18355.0], [77.8, 18364.0], [77.9, 18371.0], [78.0, 18381.0], [78.1, 18388.0], [78.2, 18396.0], [78.3, 18403.0], [78.4, 18411.0], [78.5, 18420.0], [78.6, 18429.0], [78.7, 18436.0], [78.8, 18446.0], [78.9, 18456.0], [79.0, 18463.0], [79.1, 18471.0], [79.2, 18479.0], [79.3, 18489.0], [79.4, 18495.0], [79.5, 18506.0], [79.6, 18514.0], [79.7, 18524.0], [79.8, 18533.0], [79.9, 18540.0], [80.0, 18550.0], [80.1, 18559.0], [80.2, 18569.0], [80.3, 18576.0], [80.4, 18584.0], [80.5, 18593.0], [80.6, 18600.0], [80.7, 18609.0], [80.8, 18616.0], [80.9, 18624.0], [81.0, 18631.0], [81.1, 18640.0], [81.2, 18651.0], [81.3, 18660.0], [81.4, 18668.0], [81.5, 18676.0], [81.6, 18685.0], [81.7, 18693.0], [81.8, 18701.0], [81.9, 18709.0], [82.0, 18722.0], [82.1, 18733.0], [82.2, 18741.0], [82.3, 18750.0], [82.4, 18760.0], [82.5, 18769.0], [82.6, 18778.0], [82.7, 18788.0], [82.8, 18799.0], [82.9, 18811.0], [83.0, 18821.0], [83.1, 18832.0], [83.2, 18843.0], [83.3, 18855.0], [83.4, 18863.0], [83.5, 18874.0], [83.6, 18886.0], [83.7, 18899.0], [83.8, 18910.0], [83.9, 18919.0], [84.0, 18928.0], [84.1, 18940.0], [84.2, 18951.0], [84.3, 18958.0], [84.4, 18968.0], [84.5, 18979.0], [84.6, 18992.0], [84.7, 19002.0], [84.8, 19016.0], [84.9, 19028.0], [85.0, 19038.0], [85.1, 19051.0], [85.2, 19063.0], [85.3, 19074.0], [85.4, 19084.0], [85.5, 19094.0], [85.6, 19106.0], [85.7, 19117.0], [85.8, 19128.0], [85.9, 19138.0], [86.0, 19150.0], [86.1, 19165.0], [86.2, 19176.0], [86.3, 19187.0], [86.4, 19198.0], [86.5, 19210.0], [86.6, 19221.0], [86.7, 19234.0], [86.8, 19248.0], [86.9, 19260.0], [87.0, 19271.0], [87.1, 19284.0], [87.2, 19296.0], [87.3, 19309.0], [87.4, 19322.0], [87.5, 19333.0], [87.6, 19346.0], [87.7, 19361.0], [87.8, 19375.0], [87.9, 19387.0], [88.0, 19402.0], [88.1, 19412.0], [88.2, 19426.0], [88.3, 19437.0], [88.4, 19450.0], [88.5, 19465.0], [88.6, 19478.0], [88.7, 19491.0], [88.8, 19503.0], [88.9, 19517.0], [89.0, 19533.0], [89.1, 19550.0], [89.2, 19568.0], [89.3, 19579.0], [89.4, 19594.0], [89.5, 19611.0], [89.6, 19622.0], [89.7, 19644.0], [89.8, 19658.0], [89.9, 19675.0], [90.0, 19688.0], [90.1, 19702.0], [90.2, 19717.0], [90.3, 19737.0], [90.4, 19752.0], [90.5, 19774.0], [90.6, 19791.0], [90.7, 19814.0], [90.8, 19833.0], [90.9, 19856.0], [91.0, 19872.0], [91.1, 19887.0], [91.2, 19906.0], [91.3, 19921.0], [91.4, 19938.0], [91.5, 19958.0], [91.6, 19978.0], [91.7, 20002.0], [91.8, 20026.0], [91.9, 20045.0], [92.0, 20067.0], [92.1, 20085.0], [92.2, 20107.0], [92.3, 20130.0], [92.4, 20149.0], [92.5, 20167.0], [92.6, 20189.0], [92.7, 20209.0], [92.8, 20229.0], [92.9, 20252.0], [93.0, 20279.0], [93.1, 20304.0], [93.2, 20325.0], [93.3, 20343.0], [93.4, 20371.0], [93.5, 20394.0], [93.6, 20418.0], [93.7, 20448.0], [93.8, 20474.0], [93.9, 20510.0], [94.0, 20540.0], [94.1, 20566.0], [94.2, 20596.0], [94.3, 20618.0], [94.4, 20640.0], [94.5, 20670.0], [94.6, 20695.0], [94.7, 20724.0], [94.8, 20750.0], [94.9, 20785.0], [95.0, 20807.0], [95.1, 20834.0], [95.2, 20858.0], [95.3, 20898.0], [95.4, 20924.0], [95.5, 20958.0], [95.6, 20994.0], [95.7, 21029.0], [95.8, 21074.0], [95.9, 21120.0], [96.0, 21154.0], [96.1, 21188.0], [96.2, 21232.0], [96.3, 21273.0], [96.4, 21314.0], [96.5, 21356.0], [96.6, 21401.0], [96.7, 21442.0], [96.8, 21484.0], [96.9, 21529.0], [97.0, 21582.0], [97.1, 21627.0], [97.2, 21680.0], [97.3, 21753.0], [97.4, 21830.0], [97.5, 21886.0], [97.6, 21963.0], [97.7, 22053.0], [97.8, 22117.0], [97.9, 22196.0], [98.0, 22277.0], [98.1, 22359.0], [98.2, 22455.0], [98.3, 22558.0], [98.4, 22657.0], [98.5, 22737.0], [98.6, 22859.0], [98.7, 22978.0], [98.8, 23143.0], [98.9, 23301.0], [99.0, 23469.0], [99.1, 23624.0], [99.2, 23875.0], [99.3, 24107.0], [99.4, 24434.0], [99.5, 24719.0], [99.6, 25184.0], [99.7, 25732.0], [99.8, 27005.0], [99.9, 28395.0], [100.0, 78700.0]], "isOverall": false, "label": "Digisoria Shopfront 132", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 875.0, "series": [{"data": [[0.0, 3.0], [78700.0, 1.0], [100.0, 9.0], [37300.0, 1.0], [46100.0, 1.0], [200.0, 7.0], [65300.0, 1.0], [400.0, 2.0], [500.0, 1.0], [600.0, 1.0], [700.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 1.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 6.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2400.0, 5.0], [2500.0, 1.0], [2600.0, 4.0], [2700.0, 5.0], [2800.0, 7.0], [2900.0, 2.0], [3000.0, 5.0], [3100.0, 1.0], [3300.0, 2.0], [3200.0, 4.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 4.0], [3800.0, 1.0], [3900.0, 4.0], [4000.0, 3.0], [4100.0, 3.0], [4300.0, 1.0], [67300.0, 1.0], [4500.0, 5.0], [4600.0, 2.0], [4700.0, 5.0], [4800.0, 1.0], [5100.0, 2.0], [4900.0, 4.0], [5000.0, 1.0], [5200.0, 4.0], [5300.0, 2.0], [5600.0, 2.0], [5500.0, 2.0], [5400.0, 2.0], [5700.0, 7.0], [5800.0, 3.0], [6100.0, 2.0], [5900.0, 1.0], [6000.0, 3.0], [6300.0, 5.0], [6200.0, 4.0], [6600.0, 1.0], [6400.0, 5.0], [6500.0, 1.0], [6800.0, 3.0], [6900.0, 2.0], [6700.0, 2.0], [7000.0, 1.0], [7300.0, 2.0], [7200.0, 3.0], [7400.0, 2.0], [7500.0, 3.0], [7600.0, 3.0], [7900.0, 5.0], [7800.0, 3.0], [7700.0, 2.0], [8100.0, 7.0], [8000.0, 6.0], [8600.0, 8.0], [8400.0, 6.0], [8200.0, 7.0], [8700.0, 9.0], [8300.0, 10.0], [8500.0, 7.0], [8900.0, 12.0], [8800.0, 4.0], [9000.0, 10.0], [9200.0, 11.0], [9100.0, 9.0], [9500.0, 18.0], [9700.0, 15.0], [9300.0, 6.0], [9400.0, 16.0], [9600.0, 11.0], [10100.0, 32.0], [10000.0, 30.0], [9900.0, 20.0], [10200.0, 27.0], [9800.0, 13.0], [10400.0, 32.0], [10600.0, 30.0], [10700.0, 50.0], [10500.0, 32.0], [10300.0, 35.0], [11000.0, 54.0], [10800.0, 44.0], [11100.0, 81.0], [10900.0, 51.0], [11200.0, 83.0], [11500.0, 95.0], [11400.0, 64.0], [11700.0, 114.0], [11600.0, 101.0], [11300.0, 58.0], [12000.0, 133.0], [11900.0, 123.0], [12100.0, 131.0], [11800.0, 113.0], [12200.0, 170.0], [12300.0, 151.0], [12600.0, 201.0], [12500.0, 215.0], [12400.0, 190.0], [12700.0, 209.0], [13000.0, 230.0], [13200.0, 294.0], [12800.0, 241.0], [13100.0, 267.0], [13300.0, 324.0], [12900.0, 239.0], [13700.0, 426.0], [13400.0, 334.0], [13800.0, 384.0], [13600.0, 377.0], [13500.0, 317.0], [13900.0, 421.0], [14100.0, 475.0], [14300.0, 549.0], [14200.0, 482.0], [14000.0, 492.0], [14600.0, 605.0], [14400.0, 543.0], [14800.0, 628.0], [14500.0, 590.0], [14700.0, 616.0], [15300.0, 706.0], [15000.0, 701.0], [15100.0, 644.0], [14900.0, 634.0], [15200.0, 779.0], [15600.0, 783.0], [15800.0, 794.0], [15700.0, 793.0], [15400.0, 750.0], [15500.0, 774.0], [16000.0, 841.0], [16100.0, 830.0], [16200.0, 860.0], [16300.0, 875.0], [15900.0, 833.0], [16400.0, 846.0], [16800.0, 786.0], [17400.0, 774.0], [17000.0, 819.0], [16600.0, 851.0], [17200.0, 824.0], [17600.0, 778.0], [18400.0, 593.0], [18000.0, 638.0], [18200.0, 614.0], [17800.0, 709.0], [18600.0, 590.0], [19200.0, 399.0], [19400.0, 385.0], [19000.0, 422.0], [18800.0, 448.0], [19800.0, 267.0], [20000.0, 232.0], [19600.0, 314.0], [20200.0, 213.0], [20400.0, 173.0], [20800.0, 168.0], [21000.0, 122.0], [21400.0, 118.0], [21200.0, 118.0], [20600.0, 200.0], [21600.0, 91.0], [21800.0, 84.0], [22400.0, 50.0], [22200.0, 60.0], [22000.0, 57.0], [23000.0, 33.0], [22800.0, 44.0], [22600.0, 53.0], [23400.0, 31.0], [23200.0, 30.0], [23800.0, 20.0], [23600.0, 20.0], [24200.0, 13.0], [24000.0, 15.0], [24400.0, 18.0], [24800.0, 17.0], [25200.0, 11.0], [25400.0, 10.0], [25000.0, 9.0], [24600.0, 16.0], [25600.0, 9.0], [26000.0, 5.0], [25800.0, 4.0], [26400.0, 3.0], [26600.0, 2.0], [26200.0, 7.0], [27200.0, 7.0], [27600.0, 6.0], [27000.0, 5.0], [27400.0, 3.0], [26800.0, 1.0], [27800.0, 4.0], [28600.0, 1.0], [28000.0, 2.0], [28400.0, 5.0], [28200.0, 2.0], [28800.0, 1.0], [29600.0, 2.0], [29200.0, 1.0], [29000.0, 1.0], [31400.0, 1.0], [31200.0, 1.0], [32400.0, 1.0], [35600.0, 1.0], [37200.0, 1.0], [42800.0, 1.0], [46800.0, 1.0], [52000.0, 1.0], [65600.0, 1.0], [68800.0, 1.0], [33900.0, 1.0], [33100.0, 1.0], [35100.0, 1.0], [37100.0, 1.0], [67000.0, 1.0], [17300.0, 775.0], [17100.0, 837.0], [16700.0, 856.0], [16900.0, 800.0], [16500.0, 856.0], [17700.0, 736.0], [18100.0, 656.0], [18300.0, 590.0], [17900.0, 708.0], [17500.0, 722.0], [19300.0, 378.0], [19100.0, 431.0], [18700.0, 504.0], [18900.0, 484.0], [18500.0, 564.0], [20300.0, 216.0], [19500.0, 335.0], [20100.0, 241.0], [19700.0, 274.0], [19900.0, 257.0], [20700.0, 169.0], [20900.0, 151.0], [21300.0, 114.0], [21500.0, 97.0], [21100.0, 133.0], [20500.0, 172.0], [22100.0, 76.0], [22300.0, 55.0], [21900.0, 61.0], [21700.0, 63.0], [22500.0, 48.0], [23100.0, 28.0], [22700.0, 48.0], [22900.0, 41.0], [23300.0, 29.0], [23500.0, 34.0], [24100.0, 22.0], [23900.0, 26.0], [23700.0, 22.0], [24500.0, 16.0], [24300.0, 11.0], [25500.0, 6.0], [24700.0, 11.0], [25300.0, 9.0], [25100.0, 11.0], [24900.0, 8.0], [25900.0, 6.0], [26500.0, 1.0], [25700.0, 5.0], [26300.0, 4.0], [26100.0, 6.0], [27100.0, 5.0], [26900.0, 3.0], [27300.0, 6.0], [27500.0, 3.0], [26700.0, 4.0], [27700.0, 1.0], [27900.0, 3.0], [28300.0, 2.0], [28500.0, 1.0], [28100.0, 1.0], [29300.0, 1.0], [28900.0, 5.0], [29500.0, 1.0], [28700.0, 1.0], [30100.0, 2.0], [30300.0, 1.0], [30900.0, 1.0], [31700.0, 1.0], [33000.0, 1.0], [37800.0, 1.0], [49800.0, 1.0], [49400.0, 1.0]], "isOverall": false, "label": "Digisoria Shopfront 132", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 78700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 325.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 49079.0, "series": [{"data": [[3.0, 325.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[2.0, 49079.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 62.2824427480916, "minX": 1.52508966E12, "maxY": 100.0, "series": [{"data": [[1.52509182E12, 100.0], [1.52509404E12, 100.0], [1.52509626E12, 100.0], [1.52508978E12, 100.0], [1.5250908E12, 100.0], [1.52509302E12, 100.0], [1.52509746E12, 100.0], [1.52509524E12, 100.0], [1.525092E12, 100.0], [1.52509422E12, 100.0], [1.52509098E12, 100.0], [1.5250932E12, 100.0], [1.52508996E12, 100.0], [1.52509644E12, 100.0], [1.52509542E12, 100.0], [1.52509764E12, 100.0], [1.52509218E12, 100.0], [1.5250944E12, 100.0], [1.5250947E12, 100.0], [1.52509146E12, 100.0], [1.52509368E12, 100.0], [1.52509044E12, 100.0], [1.52509692E12, 100.0], [1.5250959E12, 100.0], [1.52509266E12, 100.0], [1.52509488E12, 100.0], [1.52509164E12, 100.0], [1.52509608E12, 100.0], [1.5250971E12, 100.0], [1.52509386E12, 100.0], [1.52509062E12, 100.0], [1.52509728E12, 100.0], [1.52509284E12, 100.0], [1.52509506E12, 100.0], [1.52509008E12, 100.0], [1.52509212E12, 100.0], [1.52509656E12, 100.0], [1.52509758E12, 100.0], [1.52509434E12, 100.0], [1.5250911E12, 100.0], [1.52509332E12, 100.0], [1.52509554E12, 100.0], [1.52509776E12, 100.0], [1.5250899E12, 100.0], [1.5250923E12, 100.0], [1.52509452E12, 100.0], [1.52509674E12, 100.0], [1.52509026E12, 100.0], [1.52509128E12, 100.0], [1.5250935E12, 100.0], [1.52509572E12, 100.0], [1.52509248E12, 100.0], [1.52509278E12, 100.0], [1.525095E12, 100.0], [1.52509722E12, 100.0], [1.52509074E12, 100.0], [1.52509176E12, 100.0], [1.52509398E12, 100.0], [1.52509296E12, 100.0], [1.5250962E12, 100.0], [1.52509518E12, 100.0], [1.5250974E12, 100.0], [1.52509194E12, 100.0], [1.52509416E12, 100.0], [1.52509092E12, 100.0], [1.52509536E12, 100.0], [1.52508972E12, 100.0], [1.52509638E12, 100.0], [1.52509314E12, 100.0], [1.52509566E12, 100.0], [1.52509788E12, 62.2824427480916], [1.52509242E12, 100.0], [1.52509464E12, 100.0], [1.5250914E12, 100.0], [1.52509584E12, 100.0], [1.5250902E12, 100.0], [1.52509686E12, 100.0], [1.52509362E12, 100.0], [1.52509056E12, 100.0], [1.5250926E12, 100.0], [1.52509704E12, 100.0], [1.52509482E12, 100.0], [1.52509158E12, 100.0], [1.5250938E12, 100.0], [1.52509602E12, 100.0], [1.52509038E12, 100.0], [1.52509308E12, 100.0], [1.5250953E12, 100.0], [1.52509752E12, 100.0], [1.52508984E12, 100.0], [1.52509206E12, 100.0], [1.52509428E12, 100.0], [1.5250965E12, 100.0], [1.52509104E12, 100.0], [1.52509086E12, 100.0], [1.52509326E12, 100.0], [1.5250977E12, 100.0], [1.52509548E12, 100.0], [1.52509224E12, 100.0], [1.52509002E12, 100.0], [1.52509446E12, 100.0], [1.52509122E12, 100.0], [1.52509344E12, 100.0], [1.52509668E12, 100.0], [1.52509374E12, 100.0], [1.52509596E12, 100.0], [1.52509272E12, 100.0], [1.5250905E12, 100.0], [1.52509494E12, 100.0], [1.5250917E12, 100.0], [1.52509392E12, 100.0], [1.52509716E12, 100.0], [1.52509512E12, 100.0], [1.5250929E12, 100.0], [1.52509614E12, 100.0], [1.52508966E12, 84.78911564625855], [1.52509188E12, 100.0], [1.52509632E12, 100.0], [1.52509068E12, 100.0], [1.52509734E12, 100.0], [1.5250941E12, 100.0], [1.52509116E12, 100.0], [1.5250956E12, 100.0], [1.52509662E12, 100.0], [1.52509338E12, 100.0], [1.52509014E12, 100.0], [1.52509236E12, 100.0], [1.5250968E12, 100.0], [1.52509782E12, 100.0], [1.52509458E12, 100.0], [1.52509134E12, 100.0], [1.52509356E12, 100.0], [1.52509578E12, 100.0], [1.52509032E12, 100.0], [1.52509254E12, 100.0], [1.52509476E12, 100.0], [1.52509698E12, 100.0], [1.52509152E12, 100.0]], "isOverall": false, "label": "Digisoria Customer 1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52509788E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 450.0, "minX": 1.0, "maxY": 18083.0, "series": [{"data": [[2.0, 8132.0], [3.0, 10096.0], [4.0, 5759.0], [6.0, 8568.5], [8.0, 10993.5], [9.0, 6034.0], [10.0, 11699.0], [11.0, 6791.0], [12.0, 13480.0], [13.0, 12717.0], [15.0, 7105.0], [16.0, 4399.2], [17.0, 1361.0], [18.0, 2634.0], [19.0, 9281.0], [21.0, 8051.0], [22.0, 3041.0], [23.0, 3219.6666666666665], [25.0, 6926.333333333333], [26.0, 3033.0], [27.0, 6928.5], [28.0, 450.0], [29.0, 13568.0], [30.0, 8399.0], [33.0, 3021.0], [32.0, 10905.5], [35.0, 558.0], [34.0, 14542.0], [37.0, 6306.0], [36.0, 14400.0], [39.0, 9978.0], [38.0, 12810.0], [41.0, 4887.75], [40.0, 4071.0], [43.0, 3894.5], [42.0, 2827.0], [45.0, 10010.5], [44.0, 4947.0], [46.0, 8900.5], [47.0, 11818.0], [48.0, 8740.333333333334], [49.0, 18083.0], [51.0, 10087.0], [50.0, 2418.0], [53.0, 9664.5], [52.0, 6883.0], [55.0, 6038.0], [54.0, 6213.0], [56.0, 7064.333333333333], [57.0, 6575.5], [59.0, 5719.0], [58.0, 16141.0], [61.0, 5103.0], [60.0, 3073.0], [63.0, 1993.0], [62.0, 8313.0], [65.0, 4462.0], [66.0, 8628.5], [67.0, 11354.0], [64.0, 17824.0], [68.0, 8260.0], [71.0, 3047.0], [70.0, 4953.0], [69.0, 17348.0], [74.0, 7944.0], [75.0, 10698.5], [73.0, 13113.0], [72.0, 9272.0], [76.0, 9057.5], [77.0, 10543.5], [79.0, 10225.0], [78.0, 8538.0], [80.0, 8485.0], [83.0, 8767.2], [82.0, 3926.0], [81.0, 8172.0], [86.0, 4794.0], [85.0, 2859.0], [84.0, 2729.0], [91.0, 1066.0], [90.0, 10660.0], [89.0, 6259.0], [88.0, 3136.5], [93.0, 12163.5], [95.0, 12727.5], [94.0, 9823.0], [92.0, 12098.0], [99.0, 7238.5], [98.0, 12967.0], [97.0, 9936.0], [96.0, 8015.0], [100.0, 16608.925692823123], [1.0, 10307.0]], "isOverall": false, "label": "Digisoria Shopfront 132", "isController": false}, {"data": [[99.85472836207651, 16582.586470731243]], "isOverall": false, "label": "Digisoria Shopfront 132-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1695.2, "minX": 1.52508966E12, "maxY": 82622.45, "series": [{"data": [[1.52509182E12, 80632.58333333333], [1.52509404E12, 79523.16666666667], [1.52509626E12, 79743.86666666667], [1.52508978E12, 81296.31666666667], [1.5250908E12, 78194.66666666667], [1.52509302E12, 80188.5], [1.52509746E12, 80187.78333333334], [1.52509524E12, 81293.96666666666], [1.525092E12, 80078.16666666667], [1.52509422E12, 78637.2], [1.52509098E12, 80187.71666666666], [1.5250932E12, 78860.98333333334], [1.52508996E12, 78634.73333333334], [1.52509644E12, 81070.9], [1.52509542E12, 80408.98333333334], [1.52509764E12, 81515.03333333334], [1.52509218E12, 78857.6], [1.5250944E12, 80184.15], [1.5250947E12, 80856.2], [1.52509146E12, 70663.5], [1.52509368E12, 81054.68333333333], [1.52509044E12, 78193.36666666667], [1.52509692E12, 79302.43333333333], [1.5250959E12, 80635.45], [1.52509266E12, 78415.21666666666], [1.52509488E12, 79742.85], [1.52509164E12, 79965.35], [1.52509608E12, 80406.7], [1.5250971E12, 79076.38333333333], [1.52509386E12, 79298.9], [1.52509062E12, 79527.91666666667], [1.52509728E12, 80849.01666666666], [1.52509284E12, 81068.71666666666], [1.52509506E12, 80632.4], [1.52509008E12, 80407.95], [1.52509212E12, 80628.95], [1.52509656E12, 80629.03333333334], [1.52509758E12, 81073.33333333333], [1.52509434E12, 79962.7], [1.5250911E12, 79080.5], [1.52509332E12, 80185.41666666667], [1.52509554E12, 80631.63333333333], [1.52509776E12, 81077.6], [1.5250899E12, 79127.91666666667], [1.5250923E12, 78637.93333333333], [1.52509452E12, 79298.53333333334], [1.52509674E12, 79077.85], [1.52509026E12, 78637.63333333333], [1.52509128E12, 79525.65], [1.5250935E12, 79962.56666666667], [1.52509572E12, 79525.51666666666], [1.52509248E12, 81103.96666666666], [1.52509278E12, 80186.21666666666], [1.525095E12, 77971.68333333333], [1.52509722E12, 81077.81666666667], [1.52509074E12, 79396.13333333333], [1.52509176E12, 77748.88333333333], [1.52509398E12, 80189.88333333333], [1.52509296E12, 79967.88333333333], [1.5250962E12, 80411.4], [1.52509518E12, 78638.5], [1.5250974E12, 80187.63333333333], [1.52509194E12, 79963.55], [1.52509416E12, 81162.28333333334], [1.52509092E12, 77749.16666666667], [1.52509536E12, 79745.55], [1.52508972E12, 76198.28333333334], [1.52509638E12, 79743.2], [1.52509314E12, 80629.28333333334], [1.52509566E12, 81296.05], [1.52509788E12, 14756.483333333334], [1.52509242E12, 79302.8], [1.52509464E12, 80408.28333333334], [1.5250914E12, 79523.21666666666], [1.52509584E12, 78637.56666666667], [1.5250902E12, 79169.86666666667], [1.52509686E12, 81521.11666666667], [1.52509362E12, 79528.23333333334], [1.52509056E12, 78639.71666666666], [1.5250926E12, 79142.7], [1.52509704E12, 79523.61666666667], [1.52509482E12, 81072.53333333334], [1.52509158E12, 79413.58333333333], [1.5250938E12, 80410.86666666667], [1.52509602E12, 80853.9], [1.52509038E12, 81954.08333333333], [1.52509308E12, 78809.06666666667], [1.5250953E12, 80628.13333333333], [1.52509752E12, 79300.83333333333], [1.52508984E12, 77748.11666666667], [1.52509206E12, 78192.71666666666], [1.52509428E12, 80814.38333333333], [1.5250965E12, 79302.36666666667], [1.52509104E12, 79965.88333333333], [1.52509086E12, 79933.88333333333], [1.52509326E12, 81072.71666666666], [1.5250977E12, 79522.2], [1.52509548E12, 80852.68333333333], [1.52509224E12, 81292.68333333333], [1.52509002E12, 80185.86666666667], [1.52509446E12, 80208.23333333334], [1.52509122E12, 79083.21666666666], [1.52509344E12, 80189.96666666666], [1.52509668E12, 79964.31666666667], [1.52509374E12, 78411.73333333334], [1.52509596E12, 79521.78333333334], [1.52509272E12, 78197.6], [1.5250905E12, 81295.3], [1.52509494E12, 79750.48333333334], [1.5250917E12, 79911.98333333334], [1.52509392E12, 79523.58333333333], [1.52509716E12, 77967.86666666667], [1.52509512E12, 81294.2], [1.5250929E12, 78858.7], [1.52509614E12, 81516.06666666667], [1.52508966E12, 32562.716666666667], [1.52509188E12, 78858.11666666667], [1.52509632E12, 81960.95], [1.52509068E12, 79523.78333333334], [1.52509734E12, 80406.88333333333], [1.5250941E12, 81737.26666666666], [1.52509116E12, 79525.25], [1.5250956E12, 80183.48333333334], [1.52509662E12, 80410.9], [1.52509338E12, 82622.45], [1.52509014E12, 79077.03333333334], [1.52509236E12, 81073.2], [1.5250968E12, 81517.43333333333], [1.52509782E12, 80411.95], [1.52509458E12, 78855.88333333333], [1.52509134E12, 79525.5], [1.52509356E12, 81075.7], [1.52509578E12, 80407.85], [1.52509032E12, 77748.85], [1.52509254E12, 73983.41666666667], [1.52509476E12, 80408.95], [1.52509698E12, 80634.91666666667], [1.52509152E12, 77232.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52509182E12, 9693.566666666668], [1.52509404E12, 9560.266666666666], [1.52509626E12, 9587.966666666667], [1.52508978E12, 9775.866666666667], [1.5250908E12, 9402.866666666667], [1.52509302E12, 9643.733333333334], [1.52509746E12, 9641.933333333332], [1.52509524E12, 9775.666666666666], [1.525092E12, 9744.2], [1.52509422E12, 9457.333333333334], [1.52509098E12, 9642.3], [1.5250932E12, 9482.966666666667], [1.52508996E12, 9455.766666666666], [1.52509644E12, 9747.3], [1.52509542E12, 9666.633333333333], [1.52509764E12, 9802.4], [1.52509218E12, 9482.533333333333], [1.5250944E12, 9640.933333333332], [1.5250947E12, 9726.6], [1.52509146E12, 8497.733333333334], [1.52509368E12, 9956.7], [1.52509044E12, 9400.633333333333], [1.52509692E12, 9536.866666666667], [1.5250959E12, 9865.166666666666], [1.52509266E12, 9429.6], [1.52509488E12, 9587.3], [1.52509164E12, 9617.066666666668], [1.52509608E12, 9666.2], [1.5250971E12, 9508.833333333334], [1.52509386E12, 9533.9], [1.52509062E12, 9564.566666666668], [1.52509728E12, 9721.3], [1.52509284E12, 9747.433333333332], [1.52509506E12, 9695.466666666667], [1.52509008E12, 9668.7], [1.52509212E12, 9694.666666666666], [1.52509656E12, 9693.1], [1.52509758E12, 9748.1], [1.52509434E12, 9613.833333333334], [1.5250911E12, 9509.2], [1.52509332E12, 9643.3], [1.52509554E12, 9698.466666666667], [1.52509776E12, 9752.333333333334], [1.5250899E12, 9537.7], [1.5250923E12, 9453.566666666668], [1.52509452E12, 9532.066666666668], [1.52509674E12, 9509.2], [1.52509026E12, 9456.6], [1.52509128E12, 9564.1], [1.5250935E12, 9614.0], [1.52509572E12, 9564.233333333334], [1.52509248E12, 9996.033333333333], [1.52509278E12, 9642.166666666666], [1.525095E12, 9374.8], [1.52509722E12, 9750.733333333334], [1.52509074E12, 9767.833333333334], [1.52509176E12, 9348.1], [1.52509398E12, 9643.3], [1.52509296E12, 9617.133333333333], [1.5250962E12, 9671.2], [1.52509518E12, 9455.8], [1.5250974E12, 9642.033333333333], [1.52509194E12, 9614.666666666666], [1.52509416E12, 9802.133333333333], [1.52509092E12, 9350.333333333334], [1.52509536E12, 9587.6], [1.52508972E12, 9112.35], [1.52509638E12, 9588.266666666666], [1.52509314E12, 9693.666666666666], [1.52509566E12, 9775.033333333333], [1.52509788E12, 1695.2], [1.52509242E12, 9533.466666666667], [1.52509464E12, 9668.266666666666], [1.5250914E12, 9560.733333333334], [1.52509584E12, 9455.666666666666], [1.5250902E12, 9561.4], [1.52509686E12, 9805.1], [1.52509362E12, 9564.1], [1.52509056E12, 9458.633333333333], [1.5250926E12, 9772.233333333334], [1.52509704E12, 9563.366666666667], [1.52509482E12, 9748.333333333334], [1.52509158E12, 9802.066666666668], [1.5250938E12, 9672.5], [1.52509602E12, 9723.4], [1.52509038E12, 9853.2], [1.52509308E12, 9596.066666666668], [1.5250953E12, 9696.033333333333], [1.52509752E12, 9538.633333333333], [1.52508984E12, 9347.633333333333], [1.52509206E12, 9399.533333333333], [1.52509428E12, 9915.333333333334], [1.5250965E12, 9537.166666666666], [1.52509104E12, 9617.366666666667], [1.52509086E12, 9755.3], [1.52509326E12, 9749.133333333333], [1.5250977E12, 9561.7], [1.52509548E12, 9722.133333333333], [1.52509224E12, 9775.7], [1.52509002E12, 9641.5], [1.52509446E12, 9686.7], [1.52509122E12, 9511.3], [1.52509344E12, 9642.766666666666], [1.52509668E12, 9613.266666666666], [1.52509374E12, 9427.533333333333], [1.52509596E12, 9560.4], [1.52509272E12, 9408.233333333334], [1.5250905E12, 9774.966666666667], [1.52509494E12, 9595.166666666666], [1.5250917E12, 9630.366666666667], [1.52509392E12, 9561.566666666668], [1.52509716E12, 9373.2], [1.52509512E12, 9775.233333333334], [1.5250929E12, 9482.133333333333], [1.52509614E12, 9802.6], [1.52508966E12, 2967.8166666666666], [1.52509188E12, 9482.8], [1.52509632E12, 9858.266666666666], [1.52509068E12, 9562.666666666666], [1.52509734E12, 9667.5], [1.5250941E12, 9830.9], [1.52509116E12, 9564.033333333333], [1.5250956E12, 9639.533333333333], [1.52509662E12, 9670.6], [1.52509338E12, 9934.366666666667], [1.52509014E12, 9506.833333333334], [1.52509236E12, 9747.233333333334], [1.5250968E12, 9802.166666666666], [1.52509782E12, 9670.666666666666], [1.52509458E12, 9483.066666666668], [1.52509134E12, 9563.566666666668], [1.52509356E12, 9751.2], [1.52509578E12, 9670.066666666668], [1.52509032E12, 9346.333333333334], [1.52509254E12, 9173.166666666666], [1.52509476E12, 9669.4], [1.52509698E12, 9697.566666666668], [1.52509152E12, 9398.233333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52509788E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 10328.519083969468, "minX": 1.52508966E12, "maxY": 17989.99686520376, "series": [{"data": [[1.52509182E12, 16804.980769230777], [1.52509404E12, 16570.34818941504], [1.52509626E12, 16601.205555555534], [1.52508978E12, 16686.09536784742], [1.5250908E12, 16551.637393767684], [1.52509302E12, 16549.232044198896], [1.52509746E12, 16506.099447513836], [1.52509524E12, 16477.7002724796], [1.525092E12, 16415.943089430883], [1.52509422E12, 16414.025352112676], [1.52509098E12, 16768.762430939227], [1.5250932E12, 16859.275280898877], [1.52508996E12, 16736.881690140825], [1.52509644E12, 16501.377049180326], [1.52509542E12, 16386.506887052354], [1.52509764E12, 16543.90217391304], [1.52509218E12, 16591.38764044944], [1.5250944E12, 16452.85911602211], [1.5250947E12, 16566.673972602744], [1.52509146E12, 17989.99686520376], [1.52509368E12, 16315.825396825405], [1.52509044E12, 16685.954674220957], [1.52509692E12, 16449.036312849148], [1.5250959E12, 16483.37165775402], [1.52509266E12, 16794.915254237283], [1.52509488E12, 16474.463888888877], [1.52509164E12, 16738.066481994458], [1.52509608E12, 16387.148760330576], [1.5250971E12, 16939.504201680687], [1.52509386E12, 16666.84636871508], [1.52509062E12, 16611.395543175473], [1.52509728E12, 16528.087671232857], [1.52509284E12, 16604.234972677597], [1.52509506E12, 16946.651098901093], [1.52509008E12, 16668.842975206622], [1.52509212E12, 16530.717032967026], [1.52509656E12, 16741.16758241759], [1.52509758E12, 16628.745901639344], [1.52509434E12, 16576.2326869806], [1.5250911E12, 16643.64145658264], [1.52509332E12, 16396.49171270717], [1.52509554E12, 16488.04945054947], [1.52509776E12, 16301.11475409836], [1.5250899E12, 16880.10055865922], [1.5250923E12, 16618.53802816901], [1.52509452E12, 16804.61731843575], [1.52509674E12, 16799.487394957974], [1.52509026E12, 16828.58873239434], [1.52509128E12, 16715.526462395588], [1.5250935E12, 16460.17451523546], [1.52509572E12, 16407.902506963783], [1.52509248E12, 16122.224543080953], [1.52509278E12, 16943.930939226488], [1.525095E12, 16820.05397727275], [1.52509722E12, 16561.66666666667], [1.52509074E12, 16740.78319783198], [1.52509176E12, 16868.307692307677], [1.52509398E12, 16575.682320441992], [1.52509296E12, 16776.789473684217], [1.5250962E12, 16468.14325068871], [1.52509518E12, 16452.149295774656], [1.5250974E12, 16658.580110497245], [1.52509194E12, 16664.944598337952], [1.52509416E12, 16703.855978260865], [1.52509092E12, 16633.92307692306], [1.52509536E12, 16480.28055555557], [1.52508972E12, 17428.99127906978], [1.52509638E12, 16553.01666666666], [1.52509314E12, 16527.00824175824], [1.52509566E12, 16458.373297002716], [1.52509788E12, 10328.519083969468], [1.52509242E12, 16666.40223463687], [1.52509464E12, 16563.685950413223], [1.5250914E12, 16852.891364902505], [1.52509584E12, 16779.428169014096], [1.5250902E12, 16906.44011142062], [1.52509686E12, 16557.516304347835], [1.52509362E12, 16386.325905292473], [1.52509056E12, 16848.943661971833], [1.5250926E12, 16508.183288409706], [1.52509704E12, 16612.14206128133], [1.52509482E12, 16574.7049180328], [1.52509158E12, 16264.479892761392], [1.5250938E12, 16554.550964187332], [1.52509602E12, 16464.25753424656], [1.52509038E12, 16652.172972972978], [1.52509308E12, 16433.931129476583], [1.5250953E12, 16523.365384615376], [1.52509752E12, 16542.173184357536], [1.52508984E12, 16605.022792022777], [1.52509206E12, 16672.645892351295], [1.52509428E12, 16332.954666666672], [1.5250965E12, 16502.430167597762], [1.52509104E12, 16674.506925207766], [1.52509086E12, 16579.16032608695], [1.52509326E12, 16589.01639344263], [1.5250977E12, 16467.62952646239], [1.52509548E12, 16606.717808219175], [1.52509224E12, 16788.73297002724], [1.52509002E12, 16791.958563535918], [1.52509446E12, 16412.09589041097], [1.52509122E12, 16745.338935574247], [1.52509344E12, 16479.966850828732], [1.52509668E12, 16373.418282548466], [1.52509374E12, 16695.042372881362], [1.52509596E12, 16431.738161559915], [1.52509272E12, 16689.614730878213], [1.5250905E12, 16738.817438692116], [1.52509494E12, 16749.1361111111], [1.5250917E12, 16221.667574931875], [1.52509392E12, 16675.147632311964], [1.52509716E12, 16859.437500000015], [1.52509512E12, 16587.833787465952], [1.5250929E12, 16494.036516853932], [1.52509614E12, 16521.078804347835], [1.52508966E12, 13083.761904761905], [1.52509188E12, 16709.87359550563], [1.52509632E12, 16380.783783783803], [1.52509068E12, 16628.782729805003], [1.52509734E12, 16454.303030303014], [1.5250941E12, 16332.306233062323], [1.52509116E12, 16684.334261838438], [1.5250956E12, 16544.31767955799], [1.52509662E12, 16482.253443526188], [1.52509338E12, 16512.20643431638], [1.52509014E12, 16598.21848739498], [1.52509236E12, 16595.63387978141], [1.5250968E12, 16495.58695652171], [1.52509782E12, 16554.371900826434], [1.52509458E12, 16703.662921348303], [1.52509134E12, 16536.250696378836], [1.52509356E12, 16410.620218579235], [1.52509578E12, 16585.06060606061], [1.52509032E12, 16741.470085470086], [1.52509254E12, 16331.022857142865], [1.52509476E12, 16426.887052341604], [1.52509698E12, 16494.670329670327], [1.52509152E12, 17591.033707865154]], "isOverall": false, "label": "Digisoria Shopfront 132", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52509788E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 114.74438202247188, "minX": 1.52508966E12, "maxY": 254.73497267759558, "series": [{"data": [[1.52509182E12, 120.20054945054936], [1.52509404E12, 121.54874651810583], [1.52509626E12, 139.78333333333345], [1.52508978E12, 135.45776566757496], [1.5250908E12, 135.65722379603397], [1.52509302E12, 137.21270718232037], [1.52509746E12, 154.10773480662976], [1.52509524E12, 133.47956403269762], [1.525092E12, 133.86178861788616], [1.52509422E12, 155.1267605633803], [1.52509098E12, 137.73480662983414], [1.5250932E12, 136.4831460674157], [1.52508996E12, 134.13239436619722], [1.52509644E12, 135.33606557377055], [1.52509542E12, 118.6170798898072], [1.52509764E12, 248.30706521739148], [1.52509218E12, 150.05056179775295], [1.5250944E12, 116.21270718232047], [1.5250947E12, 136.37808219178092], [1.52509146E12, 152.8902821316615], [1.52509368E12, 134.2645502645502], [1.52509044E12, 132.73371104815865], [1.52509692E12, 139.75977653631276], [1.5250959E12, 118.67379679144383], [1.52509266E12, 120.59887005649719], [1.52509488E12, 190.93055555555557], [1.52509164E12, 124.96121883656492], [1.52509608E12, 119.78236914600555], [1.5250971E12, 115.05042016806716], [1.52509386E12, 136.91620111731837], [1.52509062E12, 119.17548746518102], [1.52509728E12, 116.31780821917812], [1.52509284E12, 121.98907103825131], [1.52509506E12, 156.1813186813187], [1.52509008E12, 155.7988980716254], [1.52509212E12, 137.50549450549457], [1.52509656E12, 117.98351648351652], [1.52509758E12, 136.33879781420774], [1.52509434E12, 136.25761772853193], [1.5250911E12, 138.61064425770283], [1.52509332E12, 115.17403314917121], [1.52509554E12, 115.99175824175828], [1.52509776E12, 117.41803278688523], [1.5250899E12, 120.22905027932957], [1.5250923E12, 135.2281690140846], [1.52509452E12, 153.30167597765353], [1.52509674E12, 117.00840336134453], [1.52509026E12, 118.23661971830988], [1.52509128E12, 152.74930362117001], [1.5250935E12, 128.25484764542932], [1.52509572E12, 134.31476323119787], [1.52509248E12, 118.65535248041779], [1.52509278E12, 123.93093922651931], [1.525095E12, 137.3664772727273], [1.52509722E12, 254.73497267759558], [1.52509074E12, 135.39566395663948], [1.52509176E12, 120.70085470085468], [1.52509398E12, 123.05801104972373], [1.52509296E12, 145.64819944598344], [1.5250962E12, 115.68044077134985], [1.52509518E12, 232.0647887323942], [1.5250974E12, 133.67955801104978], [1.52509194E12, 118.11911357340723], [1.52509416E12, 143.14402173913044], [1.52509092E12, 137.8461538461538], [1.52509536E12, 137.68888888888884], [1.52508972E12, 140.89534883720933], [1.52509638E12, 131.10000000000005], [1.52509314E12, 125.5604395604396], [1.52509566E12, 135.63487738419616], [1.52509788E12, 119.39694656488548], [1.52509242E12, 118.83519553072627], [1.52509464E12, 115.37190082644632], [1.5250914E12, 139.89693593314777], [1.52509584E12, 138.80000000000007], [1.5250902E12, 135.00000000000003], [1.52509686E12, 118.71739130434783], [1.52509362E12, 134.84122562674085], [1.52509056E12, 151.4478873239437], [1.5250926E12, 120.93261455525605], [1.52509704E12, 134.66295264623957], [1.52509482E12, 116.36338797814206], [1.52509158E12, 115.91152815013395], [1.5250938E12, 119.19008264462802], [1.52509602E12, 154.46027397260252], [1.52509038E12, 133.5108108108108], [1.52509308E12, 120.85399449035808], [1.5250953E12, 116.76098901098898], [1.52509752E12, 117.38268156424583], [1.52508984E12, 134.73504273504275], [1.52509206E12, 119.71104815864018], [1.52509428E12, 124.78133333333334], [1.5250965E12, 119.88826815642456], [1.52509104E12, 132.3296398891966], [1.52509086E12, 119.98097826086959], [1.52509326E12, 125.07103825136613], [1.5250977E12, 137.0278551532033], [1.52509548E12, 135.99452054794529], [1.52509224E12, 137.99182561307902], [1.52509002E12, 115.828729281768], [1.52509446E12, 122.7232876712329], [1.52509122E12, 137.60224089635855], [1.52509344E12, 124.67127071823205], [1.52509668E12, 134.48199445983377], [1.52509374E12, 120.78531073446322], [1.52509596E12, 118.99999999999996], [1.52509272E12, 129.32861189801693], [1.5250905E12, 121.47138964577658], [1.52509494E12, 238.73333333333366], [1.5250917E12, 132.6158038147138], [1.52509392E12, 123.93593314763227], [1.52509716E12, 116.01136363636365], [1.52509512E12, 134.16621253405995], [1.5250929E12, 139.11797752809], [1.52509614E12, 135.6902173913044], [1.52508966E12, 207.00000000000006], [1.52509188E12, 135.39606741573024], [1.52509632E12, 118.37027027027025], [1.52509068E12, 119.23119777158777], [1.52509734E12, 136.63636363636368], [1.5250941E12, 137.13821138211378], [1.52509116E12, 136.27019498607243], [1.5250956E12, 134.04696132596672], [1.52509662E12, 118.63360881542698], [1.52509338E12, 127.0482573726542], [1.52509014E12, 155.59383753501405], [1.52509236E12, 138.21038251366107], [1.5250968E12, 134.6195652173914], [1.52509782E12, 120.21212121212119], [1.52509458E12, 114.74438202247188], [1.52509134E12, 137.24233983286916], [1.52509356E12, 132.27595628415295], [1.52509578E12, 134.64187327823683], [1.52509032E12, 119.68945868945872], [1.52509254E12, 158.53714285714287], [1.52509476E12, 140.14600550964184], [1.52509698E12, 134.90934065934061], [1.52509152E12, 136.2162921348314]], "isOverall": false, "label": "Digisoria Shopfront 132", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52509788E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 72.95567867036017, "minX": 1.52508966E12, "maxY": 189.61475409836046, "series": [{"data": [[1.52509182E12, 76.48901098901099], [1.52509404E12, 78.12256267409471], [1.52509626E12, 97.07222222222222], [1.52508978E12, 93.05722070844683], [1.5250908E12, 93.85835694050996], [1.52509302E12, 94.09944751381217], [1.52509746E12, 112.02762430939227], [1.52509524E12, 91.95912806539513], [1.525092E12, 91.01355013550138], [1.52509422E12, 110.8619718309859], [1.52509098E12, 95.3895027624309], [1.5250932E12, 93.48876404494379], [1.52508996E12, 91.29295774647889], [1.52509644E12, 93.34153005464483], [1.52509542E12, 75.9338842975207], [1.52509764E12, 175.51358695652164], [1.52509218E12, 107.87359550561793], [1.5250944E12, 75.10773480662988], [1.5250947E12, 94.33424657534243], [1.52509146E12, 110.43573667711598], [1.52509368E12, 89.49206349206352], [1.52509044E12, 91.0283286118981], [1.52509692E12, 97.12569832402232], [1.5250959E12, 75.18716577540107], [1.52509266E12, 74.81920903954796], [1.52509488E12, 127.65833333333329], [1.52509164E12, 72.95567867036017], [1.52509608E12, 76.23691460055103], [1.5250971E12, 74.28571428571419], [1.52509386E12, 95.1089385474861], [1.52509062E12, 76.03342618384407], [1.52509728E12, 75.20821917808217], [1.52509284E12, 80.71584699453561], [1.52509506E12, 114.1071428571429], [1.52509008E12, 112.97796143250689], [1.52509212E12, 95.92032967032965], [1.52509656E12, 75.29945054945047], [1.52509758E12, 94.88524590163937], [1.52509434E12, 94.38227146814408], [1.5250911E12, 95.95798319327736], [1.52509332E12, 74.65193370165746], [1.52509554E12, 75.1648351648352], [1.52509776E12, 75.1311475409836], [1.5250899E12, 76.67877094972064], [1.5250923E12, 92.12957746478872], [1.52509452E12, 108.38826815642457], [1.52509674E12, 76.19047619047622], [1.52509026E12, 75.56056338028174], [1.52509128E12, 110.87186629526455], [1.5250935E12, 84.4542936288089], [1.52509572E12, 91.19498607242336], [1.52509248E12, 75.33420365535245], [1.52509278E12, 82.8977900552486], [1.525095E12, 93.6022727272726], [1.52509722E12, 189.61475409836046], [1.52509074E12, 85.52845528455295], [1.52509176E12, 76.97720797720798], [1.52509398E12, 78.91160220994473], [1.52509296E12, 103.47091412742378], [1.5250962E12, 74.72176308539943], [1.52509518E12, 188.8901408450708], [1.5250974E12, 91.51657458563534], [1.52509194E12, 77.31301939058174], [1.52509416E12, 98.55978260869571], [1.52509092E12, 96.37321937321937], [1.52509536E12, 94.51666666666665], [1.52508972E12, 96.81104651162792], [1.52509638E12, 90.12500000000007], [1.52509314E12, 84.44230769230764], [1.52509566E12, 93.0108991825614], [1.52509788E12, 75.78625954198472], [1.52509242E12, 75.81843575418998], [1.52509464E12, 74.50688705234155], [1.5250914E12, 95.45961002785512], [1.52509584E12, 95.96901408450701], [1.5250902E12, 92.11699164345401], [1.52509686E12, 75.48369565217389], [1.52509362E12, 91.78551532033427], [1.52509056E12, 109.4394366197183], [1.5250926E12, 78.02695417789766], [1.52509704E12, 93.28969359331465], [1.52509482E12, 74.94535519125687], [1.52509158E12, 74.61394101876684], [1.5250938E12, 77.22865013774101], [1.52509602E12, 112.33972602739725], [1.52509038E12, 92.24324324324319], [1.52509308E12, 79.97520661157027], [1.5250953E12, 75.3076923076923], [1.52509752E12, 76.75698324022346], [1.52508984E12, 92.94017094017094], [1.52509206E12, 75.8923512747876], [1.52509428E12, 78.18666666666672], [1.5250965E12, 76.47765363128498], [1.52509104E12, 90.96675900277008], [1.52509086E12, 76.90760869565223], [1.52509326E12, 84.13934426229515], [1.5250977E12, 95.62116991643451], [1.52509548E12, 93.71780821917808], [1.52509224E12, 97.07629427792922], [1.52509002E12, 74.97237569060772], [1.52509446E12, 80.80547945205475], [1.52509122E12, 94.87955182072827], [1.52509344E12, 81.72651933701657], [1.52509668E12, 92.62603878116344], [1.52509374E12, 78.30225988700562], [1.52509596E12, 76.06963788300838], [1.52509272E12, 86.27478753541072], [1.5250905E12, 77.0544959128065], [1.52509494E12, 160.711111111111], [1.5250917E12, 90.97275204359677], [1.52509392E12, 80.08077994428967], [1.52509716E12, 74.86931818181814], [1.52509512E12, 92.18528610354225], [1.5250929E12, 94.8595505617978], [1.52509614E12, 93.13858695652182], [1.52508966E12, 164.2517006802722], [1.52509188E12, 93.14606741573033], [1.52509632E12, 75.25945945945945], [1.52509068E12, 75.95821727019491], [1.52509734E12, 95.30578512396704], [1.5250941E12, 95.53387533875333], [1.52509116E12, 94.49303621169916], [1.5250956E12, 91.67403314917132], [1.52509662E12, 75.38016528925617], [1.52509338E12, 86.02144772117961], [1.52509014E12, 113.31372549019606], [1.52509236E12, 95.80874316939891], [1.5250968E12, 93.25543478260865], [1.52509782E12, 76.37465564738297], [1.52509458E12, 74.24438202247198], [1.52509134E12, 94.25348189415048], [1.52509356E12, 90.7677595628415], [1.52509578E12, 92.97796143250693], [1.52509032E12, 76.86609686609687], [1.52509254E12, 105.44571428571435], [1.52509476E12, 97.85399449035815], [1.52509698E12, 91.94230769230772], [1.52509152E12, 93.81460674157313]], "isOverall": false, "label": "Digisoria Shopfront 132", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52509788E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2035.0, "minX": 1.52508966E12, "maxY": 52047.0, "series": [{"data": [[1.52509182E12, 23334.0], [1.52509404E12, 20786.0], [1.52509626E12, 27350.0], [1.52508978E12, 22571.0], [1.5250908E12, 22552.0], [1.52509302E12, 22472.0], [1.52509746E12, 23541.0], [1.52509524E12, 22866.0], [1.525092E12, 24719.0], [1.52509422E12, 22737.0], [1.52509098E12, 25227.0], [1.5250932E12, 23492.0], [1.52508996E12, 49881.0], [1.52509644E12, 24296.0], [1.52509542E12, 24816.0], [1.52509764E12, 22349.0], [1.52509218E12, 23107.0], [1.5250944E12, 22915.0], [1.5250947E12, 23282.0], [1.52509146E12, 29602.0], [1.52509368E12, 28367.0], [1.52509044E12, 25693.0], [1.52509692E12, 19726.0], [1.5250959E12, 28918.0], [1.52509266E12, 26366.0], [1.52509488E12, 25960.0], [1.52509164E12, 28951.0], [1.52509608E12, 23707.0], [1.5250971E12, 22566.0], [1.52509386E12, 46138.0], [1.52509062E12, 23046.0], [1.52509728E12, 21604.0], [1.52509284E12, 21655.0], [1.52509506E12, 27694.0], [1.52509008E12, 23025.0], [1.52509212E12, 22742.0], [1.52509656E12, 25264.0], [1.52509758E12, 23265.0], [1.52509434E12, 23009.0], [1.5250911E12, 23788.0], [1.52509332E12, 22699.0], [1.52509554E12, 22443.0], [1.52509776E12, 21441.0], [1.5250899E12, 27647.0], [1.5250923E12, 22431.0], [1.52509452E12, 24968.0], [1.52509674E12, 26147.0], [1.52509026E12, 25807.0], [1.52509128E12, 21428.0], [1.5250935E12, 24451.0], [1.52509572E12, 24891.0], [1.52509248E12, 26798.0], [1.52509278E12, 24924.0], [1.525095E12, 27615.0], [1.52509722E12, 23558.0], [1.52509074E12, 30926.0], [1.52509176E12, 25160.0], [1.52509398E12, 23731.0], [1.52509296E12, 42852.0], [1.5250962E12, 24128.0], [1.52509518E12, 25889.0], [1.5250974E12, 26223.0], [1.52509194E12, 22176.0], [1.52509416E12, 26248.0], [1.52509092E12, 27353.0], [1.52509536E12, 22311.0], [1.52508972E12, 27263.0], [1.52509638E12, 21649.0], [1.52509314E12, 22418.0], [1.52509566E12, 22172.0], [1.52509788E12, 24541.0], [1.52509242E12, 24159.0], [1.52509464E12, 25636.0], [1.5250914E12, 52047.0], [1.52509584E12, 23955.0], [1.5250902E12, 28974.0], [1.52509686E12, 27238.0], [1.52509362E12, 20543.0], [1.52509056E12, 25194.0], [1.5250926E12, 30179.0], [1.52509704E12, 24863.0], [1.52509482E12, 23583.0], [1.52509158E12, 24571.0], [1.5250938E12, 23590.0], [1.52509602E12, 23265.0], [1.52509038E12, 21233.0], [1.52509308E12, 27550.0], [1.5250953E12, 22895.0], [1.52509752E12, 25349.0], [1.52508984E12, 21269.0], [1.52509206E12, 21331.0], [1.52509428E12, 30347.0], [1.5250965E12, 24368.0], [1.52509104E12, 23657.0], [1.52509086E12, 27794.0], [1.52509326E12, 22367.0], [1.5250977E12, 21451.0], [1.52509548E12, 24767.0], [1.52509224E12, 23484.0], [1.52509002E12, 27148.0], [1.52509446E12, 28580.0], [1.52509122E12, 21634.0], [1.52509344E12, 26219.0], [1.52509668E12, 23578.0], [1.52509374E12, 23538.0], [1.52509596E12, 21489.0], [1.52509272E12, 25815.0], [1.5250905E12, 23031.0], [1.52509494E12, 24861.0], [1.5250917E12, 26380.0], [1.52509392E12, 24356.0], [1.52509716E12, 26247.0], [1.52509512E12, 22279.0], [1.5250929E12, 22075.0], [1.52509614E12, 24108.0], [1.52508966E12, 22197.0], [1.52509188E12, 22472.0], [1.52509632E12, 22694.0], [1.52509068E12, 24877.0], [1.52509734E12, 22514.0], [1.5250941E12, 33152.0], [1.52509116E12, 22229.0], [1.5250956E12, 23924.0], [1.52509662E12, 22280.0], [1.52509338E12, 25415.0], [1.52509014E12, 25360.0], [1.52509236E12, 24094.0], [1.5250968E12, 24471.0], [1.52509782E12, 23821.0], [1.52509458E12, 24888.0], [1.52509134E12, 21059.0], [1.52509356E12, 20439.0], [1.52509578E12, 25456.0], [1.52509032E12, 25137.0], [1.52509254E12, 29041.0], [1.52509476E12, 22401.0], [1.52509698E12, 24201.0], [1.52509152E12, 37802.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52509182E12, 8239.0], [1.52509404E12, 12487.0], [1.52509626E12, 6484.0], [1.52508978E12, 13345.0], [1.5250908E12, 10594.0], [1.52509302E12, 11816.0], [1.52509746E12, 11105.0], [1.52509524E12, 10509.0], [1.525092E12, 10931.0], [1.52509422E12, 11571.0], [1.52509098E12, 10119.0], [1.5250932E12, 8641.0], [1.52508996E12, 9938.0], [1.52509644E12, 9987.0], [1.52509542E12, 9546.0], [1.52509764E12, 11275.0], [1.52509218E12, 11226.0], [1.5250944E12, 11713.0], [1.5250947E12, 10475.0], [1.52509146E12, 11243.0], [1.52509368E12, 7611.0], [1.52509044E12, 8297.0], [1.52509692E12, 12358.0], [1.5250959E12, 8925.0], [1.52509266E12, 9941.0], [1.52509488E12, 10307.0], [1.52509164E12, 10842.0], [1.52509608E12, 8008.0], [1.5250971E12, 9168.0], [1.52509386E12, 9109.0], [1.52509062E12, 11967.0], [1.52509728E12, 12179.0], [1.52509284E12, 11229.0], [1.52509506E12, 9865.0], [1.52509008E12, 10276.0], [1.52509212E12, 12328.0], [1.52509656E12, 10539.0], [1.52509758E12, 10018.0], [1.52509434E12, 10629.0], [1.5250911E12, 11944.0], [1.52509332E12, 10432.0], [1.52509554E12, 11555.0], [1.52509776E12, 10928.0], [1.5250899E12, 8461.0], [1.5250923E12, 11273.0], [1.52509452E12, 9757.0], [1.52509674E12, 9761.0], [1.52509026E12, 10134.0], [1.52509128E12, 12702.0], [1.5250935E12, 9278.0], [1.52509572E12, 10177.0], [1.52509248E12, 8654.0], [1.52509278E12, 7955.0], [1.525095E12, 9552.0], [1.52509722E12, 10696.0], [1.52509074E12, 7467.0], [1.52509176E12, 9888.0], [1.52509398E12, 12041.0], [1.52509296E12, 10217.0], [1.5250962E12, 11206.0], [1.52509518E12, 10338.0], [1.5250974E12, 8999.0], [1.52509194E12, 11965.0], [1.52509416E12, 9615.0], [1.52509092E12, 11653.0], [1.52509536E12, 11981.0], [1.52508972E12, 9504.0], [1.52509638E12, 11755.0], [1.52509314E12, 10248.0], [1.52509566E12, 10443.0], [1.52509788E12, 11691.0], [1.52509242E12, 11192.0], [1.52509464E12, 9404.0], [1.5250914E12, 10470.0], [1.52509584E12, 11169.0], [1.5250902E12, 11025.0], [1.52509686E12, 9178.0], [1.52509362E12, 11563.0], [1.52509056E12, 10156.0], [1.5250926E12, 8736.0], [1.52509704E12, 10090.0], [1.52509482E12, 10718.0], [1.52509158E12, 10472.0], [1.5250938E12, 10129.0], [1.52509602E12, 12325.0], [1.52509038E12, 11053.0], [1.52509308E12, 10553.0], [1.5250953E12, 10990.0], [1.52509752E12, 10569.0], [1.52508984E12, 11154.0], [1.52509206E12, 10755.0], [1.52509428E12, 8331.0], [1.5250965E12, 10181.0], [1.52509104E12, 11180.0], [1.52509086E12, 10011.0], [1.52509326E12, 11001.0], [1.5250977E12, 12282.0], [1.52509548E12, 9923.0], [1.52509224E12, 11319.0], [1.52509002E12, 12038.0], [1.52509446E12, 9467.0], [1.52509122E12, 12819.0], [1.52509344E12, 10753.0], [1.52509668E12, 9017.0], [1.52509374E12, 9606.0], [1.52509596E12, 10064.0], [1.52509272E12, 8134.0], [1.5250905E12, 9868.0], [1.52509494E12, 8919.0], [1.5250917E12, 9119.0], [1.52509392E12, 7850.0], [1.52509716E12, 10109.0], [1.52509512E12, 10476.0], [1.5250929E12, 10589.0], [1.52509614E12, 7742.0], [1.52508966E12, 2035.0], [1.52509188E12, 11586.0], [1.52509632E12, 8961.0], [1.52509068E12, 9468.0], [1.52509734E12, 9443.0], [1.5250941E12, 7999.0], [1.52509116E12, 11189.0], [1.5250956E12, 9634.0], [1.52509662E12, 12029.0], [1.52509338E12, 10500.0], [1.52509014E12, 7241.0], [1.52509236E12, 11145.0], [1.5250968E12, 10175.0], [1.52509782E12, 11093.0], [1.52509458E12, 10431.0], [1.52509134E12, 10995.0], [1.52509356E12, 11403.0], [1.52509578E12, 11049.0], [1.52509032E12, 10488.0], [1.52509254E12, 9512.0], [1.52509476E12, 12509.0], [1.52509698E12, 8738.0], [1.52509152E12, 11470.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52509182E12, 19975.0], [1.52509404E12, 19667.9], [1.52509626E12, 19690.0], [1.52508978E12, 20024.9], [1.5250908E12, 20082.600000000002], [1.52509302E12, 19846.0], [1.52509746E12, 19654.9], [1.52509524E12, 19696.9], [1.525092E12, 19937.4], [1.52509422E12, 19636.800000000003], [1.52509098E12, 20109.4], [1.5250932E12, 19856.800000000003], [1.52508996E12, 20081.399999999998], [1.52509644E12, 19670.0], [1.52509542E12, 19693.0], [1.52509764E12, 19651.9], [1.52509218E12, 19859.0], [1.5250944E12, 19642.9], [1.5250947E12, 19737.9], [1.52509146E12, 19875.0], [1.52509368E12, 19719.0], [1.52509044E12, 20117.0], [1.52509692E12, 19687.0], [1.5250959E12, 19748.0], [1.52509266E12, 19857.600000000002], [1.52509488E12, 19654.800000000003], [1.52509164E12, 19939.2], [1.52509608E12, 19642.0], [1.5250971E12, 19658.9], [1.52509386E12, 19703.9], [1.52509062E12, 20096.700000000008], [1.52509728E12, 19639.800000000003], [1.52509284E12, 19864.2], [1.52509506E12, 19711.9], [1.52509008E12, 19881.9], [1.52509212E12, 19877.0], [1.52509656E12, 19687.0], [1.52509758E12, 19674.9], [1.52509434E12, 19647.0], [1.5250911E12, 20009.6], [1.52509332E12, 19802.9], [1.52509554E12, 19711.9], [1.52509776E12, 19616.800000000003], [1.5250899E12, 19932.5], [1.5250923E12, 19814.0], [1.52509452E12, 19675.9], [1.52509674E12, 19687.9], [1.52509026E12, 20008.4], [1.52509128E12, 19875.0], [1.5250935E12, 19755.9], [1.52509572E12, 19743.9], [1.52509248E12, 19808.2], [1.52509278E12, 19885.6], [1.525095E12, 19701.0], [1.52509722E12, 19660.800000000003], [1.52509074E12, 20151.4], [1.52509176E12, 19974.0], [1.52509398E12, 19690.0], [1.52509296E12, 19859.0], [1.5250962E12, 19687.0], [1.52509518E12, 19694.9], [1.5250974E12, 19686.9], [1.52509194E12, 19928.200000000004], [1.52509416E12, 19668.9], [1.52509092E12, 20068.800000000003], [1.52509536E12, 19675.9], [1.52508972E12, 20856.6], [1.52509638E12, 19658.9], [1.52509314E12, 19817.800000000003], [1.52509566E12, 19733.700000000004], [1.52509788E12, 19608.0], [1.52509242E12, 19783.0], [1.52509464E12, 19716.9], [1.5250914E12, 19818.600000000002], [1.52509584E12, 19728.500000000007], [1.5250902E12, 20031.2], [1.52509686E12, 19691.800000000003], [1.52509362E12, 19706.9], [1.52509056E12, 20157.2], [1.5250926E12, 19844.0], [1.52509704E12, 19647.0], [1.52509482E12, 19678.800000000003], [1.52509158E12, 19944.100000000002], [1.5250938E12, 19706.9], [1.52509602E12, 19678.700000000004], [1.52509038E12, 19995.9], [1.52509308E12, 19813.9], [1.5250953E12, 19692.9], [1.52509752E12, 19680.800000000003], [1.52508984E12, 19569.0], [1.52509206E12, 19910.0], [1.52509428E12, 19670.9], [1.5250965E12, 19687.0], [1.52509104E12, 20065.3], [1.52509086E12, 20121.7], [1.52509326E12, 19828.9], [1.5250977E12, 19643.0], [1.52509548E12, 19730.0], [1.52509224E12, 19831.0], [1.52509002E12, 19978.0], [1.52509446E12, 19665.9], [1.52509122E12, 19920.0], [1.52509344E12, 19796.0], [1.52509668E12, 19663.700000000004], [1.52509374E12, 19730.0], [1.52509596E12, 19695.9], [1.52509272E12, 19875.0], [1.5250905E12, 20142.800000000003], [1.52509494E12, 19690.0], [1.5250917E12, 19963.5], [1.52509392E12, 19694.800000000003], [1.52509716E12, 19658.0], [1.52509512E12, 19685.0], [1.5250929E12, 19846.0], [1.52509614E12, 19686.800000000003], [1.52508966E12, 19294.0], [1.52509188E12, 19951.0], [1.52509632E12, 19698.9], [1.52509068E12, 20085.0], [1.52509734E12, 19663.700000000004], [1.5250941E12, 19648.9], [1.52509116E12, 19964.1], [1.5250956E12, 19750.800000000003], [1.52509662E12, 19680.800000000003], [1.52509338E12, 19790.9], [1.52509014E12, 20051.8], [1.52509236E12, 19791.0], [1.5250968E12, 19674.9], [1.52509782E12, 19605.0], [1.52509458E12, 19693.0], [1.52509134E12, 19831.0], [1.52509356E12, 19735.9], [1.52509578E12, 19758.9], [1.52509032E12, 20121.3], [1.52509254E12, 19818.0], [1.52509476E12, 19716.9], [1.52509698E12, 19664.9], [1.52509152E12, 19936.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52509182E12, 24767.5], [1.52509404E12, 24057.920000000013], [1.52509626E12, 23242.970000000005], [1.52508978E12, 23033.739999999998], [1.5250908E12, 23955.48000000001], [1.52509302E12, 24140.960000000006], [1.52509746E12, 23019.920000000013], [1.52509524E12, 23430.950000000008], [1.525092E12, 24569.96], [1.52509422E12, 23696.890000000018], [1.52509098E12, 24135.19999999999], [1.5250932E12, 24158.93000000001], [1.52508996E12, 24981.599999999995], [1.52509644E12, 23174.0], [1.52509542E12, 23357.970000000005], [1.52509764E12, 22972.730000000043], [1.52509218E12, 24357.40000000001], [1.5250944E12, 23777.0], [1.5250947E12, 23937.0], [1.52509146E12, 24462.519999999975], [1.52509368E12, 24049.87000000002], [1.52509044E12, 23885.100000000006], [1.52509692E12, 23215.860000000022], [1.5250959E12, 23418.950000000008], [1.52509266E12, 24289.160000000033], [1.52509488E12, 23354.960000000006], [1.52509164E12, 24831.339999999982], [1.52509608E12, 23222.93000000001], [1.5250971E12, 23083.99], [1.52509386E12, 24078.790000000034], [1.52509062E12, 23622.87], [1.52509728E12, 23011.99], [1.52509284E12, 24191.64], [1.52509506E12, 23430.950000000008], [1.52509008E12, 24320.860000000033], [1.52509212E12, 24459.509999999987], [1.52509656E12, 23229.93000000001], [1.52509758E12, 23019.910000000014], [1.52509434E12, 23777.0], [1.5250911E12, 23959.320000000007], [1.52509332E12, 23964.720000000045], [1.52509554E12, 23362.950000000008], [1.52509776E12, 22928.950000000008], [1.5250899E12, 23857.769999999997], [1.5250923E12, 24163.909999999974], [1.52509452E12, 23901.99], [1.52509674E12, 23198.920000000013], [1.52509026E12, 24183.840000000007], [1.52509128E12, 23770.180000000004], [1.5250935E12, 23878.710000000046], [1.52509572E12, 23370.960000000006], [1.52509248E12, 24068.55999999999], [1.52509278E12, 24221.92], [1.525095E12, 23454.910000000014], [1.52509722E12, 23068.69000000005], [1.52509074E12, 24053.230000000003], [1.52509176E12, 24821.0], [1.52509398E12, 24083.950000000008], [1.52509296E12, 24151.300000000003], [1.5250962E12, 23215.860000000022], [1.52509518E12, 23430.950000000008], [1.5250974E12, 23071.970000000005], [1.52509194E12, 24581.89], [1.52509416E12, 23878.960000000006], [1.52509092E12, 24123.799999999985], [1.52509536E12, 23354.960000000006], [1.52508972E12, 23922.639999999996], [1.52509638E12, 23173.840000000026], [1.52509314E12, 24158.93000000001], [1.52509566E12, 23366.960000000006], [1.52509788E12, 22889.960000000006], [1.52509242E12, 24064.049999999992], [1.52509464E12, 23937.0], [1.5250914E12, 23737.409999999996], [1.52509584E12, 23276.960000000006], [1.5250902E12, 24298.17999999998], [1.52509686E12, 23215.860000000022], [1.52509362E12, 23787.890000000018], [1.52509056E12, 23738.760000000002], [1.5250926E12, 24222.549999999974], [1.52509704E12, 23084.99], [1.52509482E12, 23456.99], [1.52509158E12, 24817.370000000003], [1.5250938E12, 24036.99], [1.52509602E12, 23242.970000000005], [1.52509038E12, 23923.530000000002], [1.52509308E12, 24158.93000000001], [1.5250953E12, 23395.910000000014], [1.52509752E12, 23084.99], [1.52508984E12, 22845.800000000003], [1.52509206E12, 24535.569999999985], [1.52509428E12, 23842.860000000022], [1.5250965E12, 23198.920000000013], [1.52509104E12, 24056.269999999997], [1.52509086E12, 24171.539999999994], [1.52509326E12, 24078.900000000016], [1.5250977E12, 22972.730000000043], [1.52509548E12, 23366.960000000006], [1.52509224E12, 24225.100000000002], [1.52509002E12, 24774.559999999994], [1.52509446E12, 23878.960000000006], [1.52509122E12, 23832.600000000002], [1.52509344E12, 23906.950000000008], [1.52509668E12, 23190.970000000005], [1.52509374E12, 24049.87000000002], [1.52509596E12, 23245.970000000005], [1.52509272E12, 24244.799999999974], [1.5250905E12, 23764.870000000003], [1.52509494E12, 23454.910000000014], [1.5250917E12, 24854.349999999984], [1.52509392E12, 24083.950000000008], [1.52509716E12, 23037.88000000002], [1.52509512E12, 23418.770000000037], [1.5250929E12, 24161.859999999982], [1.52509614E12, 23190.970000000005], [1.52508966E12, 22021.320000000003], [1.52509188E12, 24652.02000000002], [1.52509632E12, 23242.970000000005], [1.52509068E12, 23620.5], [1.52509734E12, 23011.99], [1.5250941E12, 23842.860000000022], [1.52509116E12, 23904.510000000002], [1.5250956E12, 23366.960000000006], [1.52509662E12, 23229.93000000001], [1.52509338E12, 23901.99], [1.52509014E12, 24234.32], [1.52509236E12, 24095.689999999988], [1.5250968E12, 23198.920000000013], [1.52509782E12, 22865.920000000013], [1.52509458E12, 23937.0], [1.52509134E12, 23726.340000000004], [1.52509356E12, 23824.69000000005], [1.52509578E12, 23425.93000000001], [1.52509032E12, 24138.32], [1.52509254E12, 24139.759999999995], [1.52509476E12, 23900.780000000035], [1.52509698E12, 23177.960000000006], [1.52509152E12, 24874.57]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52509182E12, 21129.5], [1.52509404E12, 20800.0], [1.52509626E12, 20793.9], [1.52508978E12, 21187.899999999998], [1.5250908E12, 21179.4], [1.52509302E12, 20961.0], [1.52509746E12, 20770.700000000004], [1.52509524E12, 20831.95], [1.525092E12, 21081.699999999997], [1.52509422E12, 20741.95], [1.52509098E12, 21181.7], [1.5250932E12, 20960.850000000002], [1.52508996E12, 21433.299999999996], [1.52509644E12, 20780.95], [1.52509542E12, 20809.850000000002], [1.52509764E12, 20754.0], [1.52509218E12, 20969.1], [1.5250944E12, 20744.0], [1.5250947E12, 20865.9], [1.52509146E12, 20958.19999999999], [1.52509368E12, 20850.9], [1.52509044E12, 21191.0], [1.52509692E12, 20794.95], [1.5250959E12, 20868.95], [1.52509266E12, 20993.149999999998], [1.52509488E12, 20763.700000000004], [1.52509164E12, 21086.199999999997], [1.52509608E12, 20753.0], [1.5250971E12, 20775.9], [1.52509386E12, 20846.0], [1.52509062E12, 21130.0], [1.52509728E12, 20746.95], [1.52509284E12, 21004.0], [1.52509506E12, 20831.95], [1.52509008E12, 21075.600000000002], [1.52509212E12, 21006.549999999996], [1.52509656E12, 20807.0], [1.52509758E12, 20782.9], [1.52509434E12, 20755.9], [1.5250911E12, 21128.599999999995], [1.52509332E12, 20900.0], [1.52509554E12, 20825.850000000002], [1.52509776E12, 20705.95], [1.5250899E12, 21167.949999999997], [1.5250923E12, 20930.85], [1.52509452E12, 20807.0], [1.52509674E12, 20794.95], [1.52509026E12, 21250.6], [1.52509128E12, 20953.1], [1.5250935E12, 20874.9], [1.52509572E12, 20845.9], [1.52509248E12, 20909.8], [1.52509278E12, 21032.199999999983], [1.525095E12, 20835.95], [1.52509722E12, 20775.9], [1.52509074E12, 21231.649999999994], [1.52509176E12, 21142.699999999997], [1.52509398E12, 20832.0], [1.52509296E12, 20983.0], [1.5250962E12, 20780.95], [1.52509518E12, 20827.95], [1.5250974E12, 20797.850000000002], [1.52509194E12, 21067.949999999997], [1.52509416E12, 20781.95], [1.52509092E12, 21180.6], [1.52509536E12, 20799.95], [1.52508972E12, 21838.2], [1.52509638E12, 20765.0], [1.52509314E12, 20935.0], [1.52509566E12, 20833.95], [1.52509788E12, 20691.750000000004], [1.52509242E12, 20872.75], [1.52509464E12, 20856.9], [1.5250914E12, 20900.0], [1.52509584E12, 20829.95], [1.5250902E12, 21272.0], [1.52509686E12, 20794.95], [1.52509362E12, 20822.850000000002], [1.52509056E12, 21191.4], [1.5250926E12, 20957.699999999997], [1.52509704E12, 20753.95], [1.52509482E12, 20796.850000000002], [1.52509158E12, 21084.35], [1.5250938E12, 20840.0], [1.52509602E12, 20786.0], [1.52509038E12, 21179.3], [1.52509308E12, 20935.0], [1.5250953E12, 20828.95], [1.52509752E12, 20794.95], [1.52508984E12, 20638.0], [1.52509206E12, 21052.149999999998], [1.52509428E12, 20791.95], [1.5250965E12, 20798.95], [1.52509104E12, 21180.3], [1.52509086E12, 21215.05], [1.52509326E12, 20931.95], [1.5250977E12, 20746.0], [1.52509548E12, 20832.95], [1.52509224E12, 20943.0], [1.52509002E12, 21271.399999999998], [1.52509446E12, 20781.95], [1.52509122E12, 21012.0], [1.52509344E12, 20920.0], [1.52509668E12, 20782.9], [1.52509374E12, 20861.800000000003], [1.52509596E12, 20806.850000000002], [1.52509272E12, 21023.0], [1.5250905E12, 21179.3], [1.52509494E12, 20818.850000000002], [1.5250917E12, 21131.0], [1.52509392E12, 20835.95], [1.52509716E12, 20777.95], [1.52509512E12, 20800.0], [1.5250929E12, 20972.199999999997], [1.52509614E12, 20779.95], [1.52508966E12, 20104.2], [1.52509188E12, 21084.699999999997], [1.52509632E12, 20803.9], [1.52509068E12, 21120.0], [1.52509734E12, 20770.700000000004], [1.5250941E12, 20764.95], [1.52509116E12, 21074.100000000002], [1.5250956E12, 20835.95], [1.52509662E12, 20801.9], [1.52509338E12, 20902.0], [1.52509014E12, 21267.6], [1.52509236E12, 20902.0], [1.5250968E12, 20783.95], [1.52509782E12, 20685.800000000003], [1.52509458E12, 20840.0], [1.52509134E12, 20921.1], [1.52509356E12, 20840.95], [1.52509578E12, 20884.700000000004], [1.52509032E12, 21278.499999999996], [1.52509254E12, 20932.0], [1.52509476E12, 20857.0], [1.52509698E12, 20777.95], [1.52509152E12, 21075.949999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52509788E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8152.0, "minX": 2.0, "maxY": 16633.0, "series": [{"data": [[2.0, 14646.5], [5.0, 16633.0], [6.0, 16473.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 8152.0], [5.0, 9590.0], [6.0, 8554.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 6.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 117.0, "minX": 2.0, "maxY": 230.0, "series": [{"data": [[2.0, 230.0], [5.0, 118.0], [6.0, 117.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 118.0], [5.0, 118.0], [6.0, 117.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 6.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5166666666666667, "minX": 1.52508966E12, "maxY": 6.383333333333334, "series": [{"data": [[1.52509182E12, 6.066666666666666], [1.52509404E12, 5.983333333333333], [1.52509626E12, 6.0], [1.52508978E12, 6.116666666666666], [1.5250908E12, 5.883333333333334], [1.52509302E12, 6.033333333333333], [1.52509746E12, 6.033333333333333], [1.52509524E12, 6.116666666666666], [1.525092E12, 6.15], [1.52509422E12, 5.916666666666667], [1.52509098E12, 6.033333333333333], [1.5250932E12, 5.933333333333334], [1.52508996E12, 5.916666666666667], [1.52509644E12, 6.1], [1.52509542E12, 6.05], [1.52509764E12, 6.133333333333334], [1.52509218E12, 5.933333333333334], [1.5250944E12, 6.033333333333333], [1.5250947E12, 6.083333333333333], [1.52509146E12, 5.316666666666666], [1.52509368E12, 6.3], [1.52509044E12, 5.883333333333334], [1.52509692E12, 5.966666666666667], [1.5250959E12, 6.233333333333333], [1.52509266E12, 5.9], [1.52509488E12, 6.0], [1.52509164E12, 6.016666666666667], [1.52509608E12, 6.05], [1.5250971E12, 5.95], [1.52509386E12, 5.966666666666667], [1.52509062E12, 5.983333333333333], [1.52509728E12, 6.083333333333333], [1.52509284E12, 6.1], [1.52509506E12, 6.066666666666666], [1.52509008E12, 6.05], [1.52509212E12, 6.066666666666666], [1.52509656E12, 6.066666666666666], [1.52509758E12, 6.1], [1.52509434E12, 6.016666666666667], [1.5250911E12, 5.95], [1.52509332E12, 6.033333333333333], [1.52509554E12, 6.05], [1.52509776E12, 6.1], [1.5250899E12, 5.966666666666667], [1.5250923E12, 5.916666666666667], [1.52509452E12, 5.966666666666667], [1.52509674E12, 5.95], [1.52509026E12, 5.916666666666667], [1.52509128E12, 5.983333333333333], [1.5250935E12, 6.016666666666667], [1.52509572E12, 5.983333333333333], [1.52509248E12, 6.383333333333334], [1.52509278E12, 6.033333333333333], [1.525095E12, 5.866666666666666], [1.52509722E12, 6.1], [1.52509074E12, 6.15], [1.52509176E12, 5.85], [1.52509398E12, 6.033333333333333], [1.52509296E12, 6.016666666666667], [1.5250962E12, 6.05], [1.52509518E12, 5.916666666666667], [1.5250974E12, 6.033333333333333], [1.52509194E12, 6.033333333333333], [1.52509416E12, 6.133333333333334], [1.52509092E12, 5.85], [1.52509536E12, 6.0], [1.52508972E12, 5.733333333333333], [1.52509638E12, 6.0], [1.52509314E12, 6.066666666666666], [1.52509566E12, 6.116666666666666], [1.52509788E12, 0.5166666666666667], [1.52509242E12, 5.966666666666667], [1.52509464E12, 6.05], [1.5250914E12, 5.983333333333333], [1.52509584E12, 5.916666666666667], [1.5250902E12, 5.983333333333333], [1.52509686E12, 6.133333333333334], [1.52509362E12, 5.983333333333333], [1.52509056E12, 5.916666666666667], [1.5250926E12, 6.183333333333334], [1.52509704E12, 5.983333333333333], [1.52509482E12, 6.1], [1.52509158E12, 6.216666666666667], [1.5250938E12, 6.05], [1.52509602E12, 6.083333333333333], [1.52509038E12, 6.166666666666667], [1.52509308E12, 6.05], [1.5250953E12, 6.066666666666666], [1.52509752E12, 5.966666666666667], [1.52508984E12, 5.85], [1.52509206E12, 5.883333333333334], [1.52509428E12, 6.25], [1.5250965E12, 5.966666666666667], [1.52509104E12, 6.016666666666667], [1.52509086E12, 6.133333333333334], [1.52509326E12, 6.1], [1.5250977E12, 5.983333333333333], [1.52509548E12, 6.083333333333333], [1.52509224E12, 6.116666666666666], [1.52509002E12, 6.033333333333333], [1.52509446E12, 6.083333333333333], [1.52509122E12, 5.95], [1.52509344E12, 6.033333333333333], [1.52509668E12, 6.016666666666667], [1.52509374E12, 5.9], [1.52509596E12, 5.983333333333333], [1.52509272E12, 5.883333333333334], [1.5250905E12, 6.116666666666666], [1.52509494E12, 6.0], [1.5250917E12, 6.116666666666666], [1.52509392E12, 5.983333333333333], [1.52509716E12, 5.866666666666666], [1.52509512E12, 6.116666666666666], [1.5250929E12, 5.933333333333334], [1.52509614E12, 6.133333333333334], [1.52508966E12, 4.116666666666666], [1.52509188E12, 5.916666666666667], [1.52509632E12, 6.166666666666667], [1.52509068E12, 5.983333333333333], [1.52509734E12, 6.05], [1.5250941E12, 6.15], [1.52509116E12, 5.983333333333333], [1.5250956E12, 6.05], [1.52509662E12, 6.05], [1.52509338E12, 6.216666666666667], [1.52509014E12, 5.95], [1.52509236E12, 6.1], [1.5250968E12, 6.133333333333334], [1.52509782E12, 6.05], [1.52509458E12, 5.933333333333334], [1.52509134E12, 5.983333333333333], [1.52509356E12, 6.1], [1.52509578E12, 6.05], [1.52509032E12, 5.85], [1.52509254E12, 5.833333333333333], [1.52509476E12, 6.05], [1.52509698E12, 6.066666666666666], [1.52509152E12, 5.933333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52509788E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.52508966E12, "maxY": 6.216666666666667, "series": [{"data": [[1.52509182E12, 6.066666666666666], [1.52509404E12, 5.983333333333333], [1.52509626E12, 6.0], [1.52508978E12, 6.116666666666666], [1.5250908E12, 5.883333333333334], [1.52509302E12, 6.033333333333333], [1.52509746E12, 6.033333333333333], [1.52509524E12, 6.116666666666666], [1.525092E12, 5.983333333333333], [1.52509422E12, 5.916666666666667], [1.52509098E12, 6.033333333333333], [1.5250932E12, 5.933333333333334], [1.52508996E12, 5.916666666666667], [1.52509644E12, 6.1], [1.52509542E12, 6.05], [1.52509764E12, 6.133333333333334], [1.52509218E12, 5.933333333333334], [1.5250944E12, 6.033333333333333], [1.5250947E12, 6.083333333333333], [1.52509146E12, 5.316666666666666], [1.52509368E12, 6.016666666666667], [1.52509044E12, 5.883333333333334], [1.52509692E12, 5.966666666666667], [1.5250959E12, 6.016666666666667], [1.52509266E12, 5.9], [1.52509488E12, 6.0], [1.52509164E12, 6.016666666666667], [1.52509608E12, 6.05], [1.5250971E12, 5.95], [1.52509386E12, 5.966666666666667], [1.52509062E12, 5.983333333333333], [1.52509728E12, 6.083333333333333], [1.52509284E12, 6.1], [1.52509506E12, 6.066666666666666], [1.52509008E12, 6.05], [1.52509212E12, 6.066666666666666], [1.52509656E12, 6.066666666666666], [1.52509758E12, 6.1], [1.52509434E12, 6.016666666666667], [1.5250911E12, 5.95], [1.52509332E12, 6.033333333333333], [1.52509554E12, 6.066666666666666], [1.52509776E12, 6.1], [1.5250899E12, 5.95], [1.5250923E12, 5.916666666666667], [1.52509452E12, 5.966666666666667], [1.52509674E12, 5.95], [1.52509026E12, 5.916666666666667], [1.52509128E12, 5.983333333333333], [1.5250935E12, 6.016666666666667], [1.52509572E12, 5.983333333333333], [1.52509248E12, 5.983333333333333], [1.52509278E12, 6.033333333333333], [1.525095E12, 5.866666666666666], [1.52509722E12, 6.1], [1.52509074E12, 5.883333333333334], [1.52509176E12, 5.85], [1.52509398E12, 6.033333333333333], [1.52509296E12, 6.016666666666667], [1.5250962E12, 6.05], [1.52509518E12, 5.916666666666667], [1.5250974E12, 6.033333333333333], [1.52509194E12, 6.016666666666667], [1.52509416E12, 6.1], [1.52509092E12, 5.85], [1.52509536E12, 6.0], [1.52508972E12, 5.733333333333333], [1.52509638E12, 6.0], [1.52509314E12, 6.066666666666666], [1.52509566E12, 6.116666666666666], [1.52509788E12, 0.5166666666666667], [1.52509242E12, 5.966666666666667], [1.52509464E12, 6.05], [1.5250914E12, 5.983333333333333], [1.52509584E12, 5.916666666666667], [1.5250902E12, 5.95], [1.52509686E12, 6.133333333333334], [1.52509362E12, 5.983333333333333], [1.52509056E12, 5.916666666666667], [1.5250926E12, 5.866666666666666], [1.52509704E12, 5.983333333333333], [1.52509482E12, 6.1], [1.52509158E12, 5.866666666666666], [1.5250938E12, 6.05], [1.52509602E12, 6.083333333333333], [1.52509038E12, 6.166666666666667], [1.52509308E12, 5.883333333333334], [1.5250953E12, 6.066666666666666], [1.52509752E12, 5.966666666666667], [1.52508984E12, 5.85], [1.52509206E12, 5.883333333333334], [1.52509428E12, 6.0], [1.5250965E12, 5.966666666666667], [1.52509104E12, 6.016666666666667], [1.52509086E12, 5.95], [1.52509326E12, 6.1], [1.5250977E12, 5.983333333333333], [1.52509548E12, 6.083333333333333], [1.52509224E12, 6.116666666666666], [1.52509002E12, 6.033333333333333], [1.52509446E12, 6.016666666666667], [1.52509122E12, 5.95], [1.52509344E12, 6.033333333333333], [1.52509668E12, 6.016666666666667], [1.52509374E12, 5.9], [1.52509596E12, 5.983333333333333], [1.52509272E12, 5.883333333333334], [1.5250905E12, 6.116666666666666], [1.52509494E12, 6.0], [1.5250917E12, 5.683333333333334], [1.52509392E12, 5.983333333333333], [1.52509716E12, 5.866666666666666], [1.52509512E12, 6.116666666666666], [1.5250929E12, 5.933333333333334], [1.52509614E12, 6.133333333333334], [1.52508966E12, 2.45], [1.52509188E12, 5.933333333333334], [1.52509632E12, 6.166666666666667], [1.52509068E12, 5.983333333333333], [1.52509734E12, 6.05], [1.5250941E12, 6.15], [1.52509116E12, 5.983333333333333], [1.5250956E12, 6.033333333333333], [1.52509662E12, 6.05], [1.52509338E12, 6.216666666666667], [1.52509014E12, 5.95], [1.52509236E12, 6.1], [1.5250968E12, 6.133333333333334], [1.52509782E12, 6.05], [1.52509458E12, 5.933333333333334], [1.52509134E12, 5.983333333333333], [1.52509356E12, 6.1], [1.52509578E12, 6.05], [1.52509032E12, 5.85], [1.52509254E12, 5.45], [1.52509476E12, 6.05], [1.52509698E12, 6.066666666666666], [1.52509152E12, 5.75]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.52509308E12, 0.13333333333333333], [1.52509074E12, 0.25], [1.52509368E12, 0.2], [1.52509428E12, 0.2], [1.5250917E12, 0.35], [1.5250959E12, 0.11666666666666667], [1.52509086E12, 0.16666666666666666], [1.525092E12, 0.15], [1.5250926E12, 0.23333333333333334], [1.52509158E12, 0.26666666666666666], [1.52509254E12, 0.3333333333333333], [1.52509446E12, 0.05], [1.52509152E12, 0.15], [1.52509248E12, 0.3]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.52509074E12, 0.016666666666666666], [1.5250926E12, 0.016666666666666666], [1.52509368E12, 0.05], [1.52509254E12, 0.03333333333333333], [1.52509428E12, 0.05], [1.5250917E12, 0.016666666666666666], [1.5250959E12, 0.03333333333333333], [1.52509152E12, 0.016666666666666666], [1.52509086E12, 0.016666666666666666], [1.525092E12, 0.016666666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.52509308E12, 0.03333333333333333], [1.5250926E12, 0.06666666666666667], [1.52509368E12, 0.016666666666666666], [1.52509158E12, 0.06666666666666667], [1.52509446E12, 0.016666666666666666], [1.5250917E12, 0.06666666666666667], [1.5250959E12, 0.06666666666666667], [1.52509248E12, 0.08333333333333333]], "isOverall": false, "label": "403", "isController": false}, {"data": [[1.52509416E12, 0.03333333333333333], [1.5250902E12, 0.03333333333333333], [1.5250899E12, 0.016666666666666666]], "isOverall": false, "label": "504", "isController": false}, {"data": [[1.52509368E12, 0.016666666666666666], [1.52509158E12, 0.016666666666666666], [1.52509254E12, 0.016666666666666666], [1.52509152E12, 0.016666666666666666], [1.52509248E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}, {"data": [[1.52509788E12, 1.6666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52509788E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.52508966E12, "maxY": 6.216666666666667, "series": [{"data": [[1.52509182E12, 6.066666666666666], [1.52509404E12, 5.983333333333333], [1.52509626E12, 6.0], [1.52508978E12, 6.116666666666666], [1.5250908E12, 5.883333333333334], [1.52509302E12, 6.033333333333333], [1.52509746E12, 6.033333333333333], [1.52509524E12, 6.116666666666666], [1.525092E12, 5.983333333333333], [1.52509422E12, 5.916666666666667], [1.52509098E12, 6.033333333333333], [1.5250932E12, 5.933333333333334], [1.52508996E12, 5.916666666666667], [1.52509644E12, 6.1], [1.52509542E12, 6.05], [1.52509764E12, 6.133333333333334], [1.52509218E12, 5.933333333333334], [1.5250944E12, 6.033333333333333], [1.5250947E12, 6.083333333333333], [1.52509146E12, 5.316666666666666], [1.52509368E12, 6.016666666666667], [1.52509044E12, 5.883333333333334], [1.52509692E12, 5.966666666666667], [1.5250959E12, 6.016666666666667], [1.52509266E12, 5.9], [1.52509488E12, 6.0], [1.52509164E12, 6.016666666666667], [1.52509608E12, 6.05], [1.5250971E12, 5.95], [1.52509386E12, 5.966666666666667], [1.52509062E12, 5.983333333333333], [1.52509728E12, 6.083333333333333], [1.52509284E12, 6.1], [1.52509506E12, 6.066666666666666], [1.52509008E12, 6.05], [1.52509212E12, 6.066666666666666], [1.52509656E12, 6.066666666666666], [1.52509758E12, 6.1], [1.52509434E12, 6.016666666666667], [1.5250911E12, 5.95], [1.52509332E12, 6.033333333333333], [1.52509554E12, 6.066666666666666], [1.52509776E12, 6.1], [1.5250899E12, 5.95], [1.5250923E12, 5.916666666666667], [1.52509452E12, 5.966666666666667], [1.52509674E12, 5.95], [1.52509026E12, 5.916666666666667], [1.52509128E12, 5.983333333333333], [1.5250935E12, 6.016666666666667], [1.52509572E12, 5.983333333333333], [1.52509248E12, 5.983333333333333], [1.52509278E12, 6.033333333333333], [1.525095E12, 5.866666666666666], [1.52509722E12, 6.1], [1.52509074E12, 5.883333333333334], [1.52509176E12, 5.85], [1.52509398E12, 6.033333333333333], [1.52509296E12, 6.016666666666667], [1.5250962E12, 6.05], [1.52509518E12, 5.916666666666667], [1.5250974E12, 6.033333333333333], [1.52509194E12, 6.016666666666667], [1.52509416E12, 6.1], [1.52509092E12, 5.85], [1.52509536E12, 6.0], [1.52508972E12, 5.733333333333333], [1.52509638E12, 6.0], [1.52509314E12, 6.066666666666666], [1.52509566E12, 6.116666666666666], [1.52509788E12, 0.5166666666666667], [1.52509242E12, 5.966666666666667], [1.52509464E12, 6.05], [1.5250914E12, 5.983333333333333], [1.52509584E12, 5.916666666666667], [1.5250902E12, 5.95], [1.52509686E12, 6.133333333333334], [1.52509362E12, 5.983333333333333], [1.52509056E12, 5.916666666666667], [1.5250926E12, 5.866666666666666], [1.52509704E12, 5.983333333333333], [1.52509482E12, 6.1], [1.52509158E12, 5.866666666666666], [1.5250938E12, 6.05], [1.52509602E12, 6.083333333333333], [1.52509038E12, 6.166666666666667], [1.52509308E12, 5.883333333333334], [1.5250953E12, 6.066666666666666], [1.52509752E12, 5.966666666666667], [1.52508984E12, 5.85], [1.52509206E12, 5.883333333333334], [1.52509428E12, 6.0], [1.5250965E12, 5.966666666666667], [1.52509104E12, 6.016666666666667], [1.52509086E12, 5.95], [1.52509326E12, 6.1], [1.5250977E12, 5.983333333333333], [1.52509548E12, 6.083333333333333], [1.52509224E12, 6.116666666666666], [1.52509002E12, 6.033333333333333], [1.52509446E12, 6.016666666666667], [1.52509122E12, 5.95], [1.52509344E12, 6.033333333333333], [1.52509668E12, 6.016666666666667], [1.52509374E12, 5.9], [1.52509596E12, 5.983333333333333], [1.52509272E12, 5.883333333333334], [1.5250905E12, 6.116666666666666], [1.52509494E12, 6.0], [1.5250917E12, 5.683333333333334], [1.52509392E12, 5.983333333333333], [1.52509716E12, 5.866666666666666], [1.52509512E12, 6.116666666666666], [1.5250929E12, 5.933333333333334], [1.52509614E12, 6.133333333333334], [1.52508966E12, 2.45], [1.52509188E12, 5.933333333333334], [1.52509632E12, 6.166666666666667], [1.52509068E12, 5.983333333333333], [1.52509734E12, 6.05], [1.5250941E12, 6.15], [1.52509116E12, 5.983333333333333], [1.5250956E12, 6.033333333333333], [1.52509662E12, 6.05], [1.52509338E12, 6.216666666666667], [1.52509014E12, 5.95], [1.52509236E12, 6.1], [1.5250968E12, 6.133333333333334], [1.52509782E12, 6.05], [1.52509458E12, 5.933333333333334], [1.52509134E12, 5.983333333333333], [1.52509356E12, 6.1], [1.52509578E12, 6.05], [1.52509032E12, 5.85], [1.52509254E12, 5.45], [1.52509476E12, 6.05], [1.52509698E12, 6.066666666666666], [1.52509152E12, 5.75]], "isOverall": false, "label": "Digisoria Shopfront 132-success", "isController": false}, {"data": [[1.52509308E12, 0.16666666666666666], [1.52509074E12, 0.26666666666666666], [1.52509368E12, 0.2833333333333333], [1.52509788E12, 1.6666666666666667], [1.52509428E12, 0.25], [1.5250917E12, 0.43333333333333335], [1.5250959E12, 0.21666666666666667], [1.5250902E12, 0.03333333333333333], [1.5250899E12, 0.016666666666666666], [1.52509086E12, 0.18333333333333332], [1.525092E12, 0.16666666666666666], [1.5250926E12, 0.31666666666666665], [1.52509416E12, 0.03333333333333333], [1.52509158E12, 0.35], [1.52509254E12, 0.38333333333333336], [1.52509446E12, 0.06666666666666667], [1.52509152E12, 0.18333333333333332], [1.52509248E12, 0.4]], "isOverall": false, "label": "Digisoria Shopfront 132-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52509788E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
